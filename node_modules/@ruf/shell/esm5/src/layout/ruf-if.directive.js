import * as tslib_1 from "tslib";
import { ElementRef, ViewContainerRef, TemplateRef, Input, Directive, ChangeDetectorRef } from '@angular/core';
import { BaseDirective, MediaMonitor, StyleUtils } from '@angular/flex-layout';
var FALSY = ['false', false, 0];
var RufIfDirective = /** @class */ (function (_super) {
    tslib_1.__extends(RufIfDirective, _super);
    function RufIfDirective(templateRef, viewContainer, monitor, elRef, styleUtils, changeDetectorRef) {
        var _this = _super.call(this, monitor, elRef, styleUtils) || this;
        _this.templateRef = templateRef;
        _this.viewContainer = viewContainer;
        _this.elRef = elRef;
        _this.styleUtils = styleUtils;
        _this.changeDetectorRef = changeDetectorRef;
        _this.isAlreadyInserted = false;
        return _this;
    }
    Object.defineProperty(RufIfDirective.prototype, "rufIfXs", {
        set: function (val) {
            this._cacheInput('rufIfXs', val);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(RufIfDirective.prototype, "rufIfGtXs", {
        set: function (val) {
            this._cacheInput('rufIfGtXs', val);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(RufIfDirective.prototype, "rufIfSm", {
        set: function (val) {
            this._cacheInput('rufIfSm', val);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(RufIfDirective.prototype, "rufIfGtSm", {
        set: function (val) {
            this._cacheInput('rufIfGtSm', val);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(RufIfDirective.prototype, "rufIfMd", {
        set: function (val) {
            this._cacheInput('rufIfMd', val);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(RufIfDirective.prototype, "rufIfGtMd", {
        set: function (val) {
            this._cacheInput('rufIfGtMd', val);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(RufIfDirective.prototype, "rufIfLg", {
        set: function (val) {
            this._cacheInput('rufIfLg', val);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(RufIfDirective.prototype, "rufIfGtLg", {
        set: function (val) {
            this._cacheInput('rufIfGtLg', val);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(RufIfDirective.prototype, "rufIfXl", {
        set: function (val) {
            this._cacheInput('rufIfXl', val);
        },
        enumerable: true,
        configurable: true
    });
    RufIfDirective.prototype._getDisplayStyle = function () {
        // this is not used for rufIf, only prevents error from being throw as BaseDirective invokes it
        return 'block';
    };
    RufIfDirective.prototype.ngOnChanges = function (changes) {
        if (changes['rufIf'] != null || this._mqActivation) {
            this._updateWithValue();
        }
    };
    RufIfDirective.prototype.ngOnInit = function () {
        var _this = this;
        this._listenForMediaQueryChanges('rufIf', false, function (changes) {
            _this._updateWithValue(changes.value);
            _this.changeDetectorRef.markForCheck();
        });
        this._updateWithValue();
    };
    RufIfDirective.prototype.ngOnDestroy = function () {
        _super.prototype.ngOnDestroy.call(this);
    };
    RufIfDirective.prototype._updateWithValue = function (value) {
        value = value || this._getDefaultVal('rufIf', false);
        if (this._mqActivation) {
            value = this._mqActivation.activatedInput;
        }
        var shouldShow = this._validateTruthy(value);
        this._update(shouldShow);
    };
    // Insert or remove the template
    RufIfDirective.prototype._update = function (value) {
        if (value && !this.isAlreadyInserted) {
            this.viewContainer.createEmbeddedView(this.templateRef);
            this.isAlreadyInserted = true;
        }
        else if (!value && this.isAlreadyInserted) {
            this.viewContainer.clear();
            this.isAlreadyInserted = false;
        }
    };
    RufIfDirective.prototype._validateTruthy = function (value) {
        return FALSY.indexOf(value) === -1;
    };
    tslib_1.__decorate([
        Input('rufIfXs'),
        tslib_1.__metadata("design:type", Object),
        tslib_1.__metadata("design:paramtypes", [Object])
    ], RufIfDirective.prototype, "rufIfXs", null);
    tslib_1.__decorate([
        Input('rufIfGtXs'),
        tslib_1.__metadata("design:type", Object),
        tslib_1.__metadata("design:paramtypes", [Object])
    ], RufIfDirective.prototype, "rufIfGtXs", null);
    tslib_1.__decorate([
        Input('rufIfSm'),
        tslib_1.__metadata("design:type", Object),
        tslib_1.__metadata("design:paramtypes", [Object])
    ], RufIfDirective.prototype, "rufIfSm", null);
    tslib_1.__decorate([
        Input('rufIfGtSm'),
        tslib_1.__metadata("design:type", Object),
        tslib_1.__metadata("design:paramtypes", [Object])
    ], RufIfDirective.prototype, "rufIfGtSm", null);
    tslib_1.__decorate([
        Input('rufIfMd'),
        tslib_1.__metadata("design:type", Object),
        tslib_1.__metadata("design:paramtypes", [Object])
    ], RufIfDirective.prototype, "rufIfMd", null);
    tslib_1.__decorate([
        Input('rufIfGtMd'),
        tslib_1.__metadata("design:type", Object),
        tslib_1.__metadata("design:paramtypes", [Object])
    ], RufIfDirective.prototype, "rufIfGtMd", null);
    tslib_1.__decorate([
        Input('rufIfLg'),
        tslib_1.__metadata("design:type", Object),
        tslib_1.__metadata("design:paramtypes", [Object])
    ], RufIfDirective.prototype, "rufIfLg", null);
    tslib_1.__decorate([
        Input('rufIfGtLg'),
        tslib_1.__metadata("design:type", Object),
        tslib_1.__metadata("design:paramtypes", [Object])
    ], RufIfDirective.prototype, "rufIfGtLg", null);
    tslib_1.__decorate([
        Input('rufIfXl'),
        tslib_1.__metadata("design:type", Object),
        tslib_1.__metadata("design:paramtypes", [Object])
    ], RufIfDirective.prototype, "rufIfXl", null);
    RufIfDirective = tslib_1.__decorate([
        Directive({
            selector: "\n    [rufIfXs],\n    [rufIfGtXs],\n    [rufIfSm],\n    [rufIfGtSm],\n    [rufIfMd],\n    [rufIfGtMd],\n    [rufIfLg],\n    [rufIfGtLg],\n    [rufIfXl]\n  "
        }),
        tslib_1.__metadata("design:paramtypes", [TemplateRef,
            ViewContainerRef,
            MediaMonitor,
            ElementRef,
            StyleUtils,
            ChangeDetectorRef])
    ], RufIfDirective);
    return RufIfDirective;
}(BaseDirective));
export { RufIfDirective };
//# sourceMappingURL=data:application/json;base64,