import * as tslib_1 from "tslib";
import { Input, Output, EventEmitter, Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, QueryList, HostBinding, ViewChildren } from '@angular/core';
import { Observable } from 'rxjs';
import { RufKeyboardNavigation, RufKeyCodes } from '../input/keyboard';
import { RufFocusableDirective } from '../utils/focusable';
var RufSitemapComponent = /** @class */ (function () {
    function RufSitemapComponent(_elementRef) {
        this._elementRef = _elementRef;
        this.role = 'menubar';
        this.select = new EventEmitter();
        this.direction = 'row';
    }
    RufSitemapComponent.prototype.ngAfterViewInit = function () {
        var _this = this;
        if (this.sitemapItems.length > 0) {
            this.addNewKeyboardNav();
        }
        this.sitemapItems.changes.subscribe(function (changes) {
            if (_this.sitemapItems.length > 0) {
                _this.addNewKeyboardNav();
            }
        });
    };
    RufSitemapComponent.prototype.addNewKeyboardNav = function () {
        this._keyboardNav = new RufKeyboardNavigation();
        this._keyboardNav.setDirection(this.direction);
        this._keyboardNav.init(this._elementRef, this.sitemapItems);
        this._keyboardNav.addTabIndex(this.sitemapItems);
    };
    // emit the currently selected
    RufSitemapComponent.prototype.selectItem = function (sitemapItem) {
        this.select.emit(sitemapItem);
    };
    RufSitemapComponent.prototype.onKey = function (event, item) {
        this._keyboardNav.onKeyDown(event);
        switch (event.keyCode) {
            case RufKeyCodes.ENTER:
            case RufKeyCodes.SPACE:
                this.selectItem(item);
                break;
        }
    };
    RufSitemapComponent.prototype.uniqueItem = function (index, item) {
        return item.path;
    };
    tslib_1.__decorate([
        HostBinding('attr.role'),
        tslib_1.__metadata("design:type", Object)
    ], RufSitemapComponent.prototype, "role", void 0);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", Observable)
    ], RufSitemapComponent.prototype, "items", void 0);
    tslib_1.__decorate([
        Output(),
        tslib_1.__metadata("design:type", Object)
    ], RufSitemapComponent.prototype, "select", void 0);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", Object)
    ], RufSitemapComponent.prototype, "direction", void 0);
    tslib_1.__decorate([
        ViewChildren(RufFocusableDirective),
        tslib_1.__metadata("design:type", QueryList)
    ], RufSitemapComponent.prototype, "sitemapItems", void 0);
    RufSitemapComponent = tslib_1.__decorate([
        Component({
            selector: 'ruf-sitemap',
            template: "<div class=\"ruf-sitemap-wrap\">\n  <div *ngFor=\"let parent of items | async; trackBy: uniqueItem \" class=\"ruf-sitemap-parent\">\n    <small *ngIf=\"parent.context\" class=\"ruf-sitemap-context\">{{parent.context}}\n      <span class=\"fis-icon-chevron-double\"></span>\n    </small>\n    <div class=\"ruf-title\">{{ parent.label }}</div><br>\n\n    <ul class=\"ruf-sitemap-children\">\n      <li *ngFor=\"let child of parent.children; trackBy: uniqueItem\" class=\"ruf-sitemap-child\">\n        <a (click)=\"selectItem(child);\" (keydown)=\"onKey($event, child)\" role=\"menuitem\" title=\"{{ child.label }}\" rufFocusable>{{ child.label }}</a>\n      </li>\n    </ul>\n  </div>\n</div>\n\n",
            encapsulation: ViewEncapsulation.None,
            providers: [],
            changeDetection: ChangeDetectionStrategy.OnPush,
            styles: ["ruf-sitemap{display:block;max-height:100%;overflow-y:auto;padding:20px;width:100%}ruf-sitemap .ruf-sitemap-wrap{display:-webkit-box;display:flex;-webkit-box-flex:1;flex:1 1 auto;-webkit-box-orient:horizontal;-webkit-box-direction:normal;flex-flow:row wrap}ruf-sitemap .fis-icon-chevron-double{-webkit-transform:rotate(-90deg);transform:rotate(-90deg)}ruf-sitemap .ruf-sitemap-context{display:block;padding-left:10px}ruf-sitemap .ruf-sitemap-parent{width:200px}ruf-sitemap .ruf-sitemap-parent .ruf-title{cursor:default;display:inline-block;padding:5px 10px;text-transform:uppercase;white-space:pre-wrap;word-wrap:break-word}ruf-sitemap .ruf-sitemap-parent ul{margin:4px 4px 16px 0;padding-left:25px}ruf-sitemap .ruf-sitemap-parent ul .ruf-title{list-style-type:none}ruf-sitemap .ruf-sitemap-parent ul li{padding:4px}ruf-sitemap .ruf-sitemap-parent ul li a{cursor:pointer}ruf-sitemap .ruf-sitemap-parent ul li a:hover{text-decoration:underline}ruf-sitemap::-webkit-scrollbar{width:.5em}ruf-sitemap::-webkit-scrollbar-button{height:.5em}"]
        }),
        tslib_1.__metadata("design:paramtypes", [ElementRef])
    ], RufSitemapComponent);
    return RufSitemapComponent;
}());
export { RufSitemapComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2l0ZW1hcC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AcnVmL3NoZWxsLyIsInNvdXJjZXMiOlsic3JjL3NpdGVtYXAvc2l0ZW1hcC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFDTCxLQUFLLEVBQ0wsTUFBTSxFQUNOLFlBQVksRUFDWixTQUFTLEVBQ1QsaUJBQWlCLEVBQ2pCLHVCQUF1QixFQUN2QixVQUFVLEVBRVYsU0FBUyxFQUNULFdBQVcsRUFDWCxZQUFZLEVBQ2IsTUFBTSxlQUFlLENBQUM7QUFDdkIsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLE1BQU0sQ0FBQztBQUNsQyxPQUFPLEVBQUUscUJBQXFCLEVBQUUsV0FBVyxFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFDdkUsT0FBTyxFQUFFLHFCQUFxQixFQUFFLE1BQU0sb0JBQW9CLENBQUM7QUFnQjNEO0lBV0UsNkJBQXNCLFdBQXVCO1FBQXZCLGdCQUFXLEdBQVgsV0FBVyxDQUFZO1FBVm5CLFNBQUksR0FBRyxTQUFTLENBQUM7UUFHakMsV0FBTSxHQUFHLElBQUksWUFBWSxFQUFrQixDQUFDO1FBQzdDLGNBQVMsR0FBRyxLQUFLLENBQUM7SUFNcUIsQ0FBQztJQUVqRCw2Q0FBZSxHQUFmO1FBQUEsaUJBU0M7UUFSQyxJQUFJLElBQUksQ0FBQyxZQUFZLENBQUMsTUFBTSxHQUFHLENBQUMsRUFBRTtZQUNoQyxJQUFJLENBQUMsaUJBQWlCLEVBQUUsQ0FBQztTQUMxQjtRQUNELElBQUksQ0FBQyxZQUFZLENBQUMsT0FBTyxDQUFDLFNBQVMsQ0FBQyxVQUFBLE9BQU87WUFDekMsSUFBSSxLQUFJLENBQUMsWUFBWSxDQUFDLE1BQU0sR0FBRyxDQUFDLEVBQUU7Z0JBQ2hDLEtBQUksQ0FBQyxpQkFBaUIsRUFBRSxDQUFDO2FBQzFCO1FBQ0gsQ0FBQyxDQUFDLENBQUM7SUFDTCxDQUFDO0lBRUQsK0NBQWlCLEdBQWpCO1FBQ0UsSUFBSSxDQUFDLFlBQVksR0FBRyxJQUFJLHFCQUFxQixFQUFFLENBQUM7UUFDaEQsSUFBSSxDQUFDLFlBQVksQ0FBQyxZQUFZLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDO1FBQy9DLElBQUksQ0FBQyxZQUFZLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxXQUFXLEVBQUUsSUFBSSxDQUFDLFlBQVksQ0FBQyxDQUFDO1FBQzVELElBQUksQ0FBQyxZQUFZLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxZQUFZLENBQUMsQ0FBQztJQUNuRCxDQUFDO0lBRUQsOEJBQThCO0lBQzlCLHdDQUFVLEdBQVYsVUFBVyxXQUEyQjtRQUNwQyxJQUFJLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQztJQUNoQyxDQUFDO0lBRUQsbUNBQUssR0FBTCxVQUFNLEtBQW9CLEVBQUUsSUFBb0I7UUFDOUMsSUFBSSxDQUFDLFlBQVksQ0FBQyxTQUFTLENBQUMsS0FBSyxDQUFDLENBQUM7UUFDbkMsUUFBUSxLQUFLLENBQUMsT0FBTyxFQUFFO1lBQ3JCLEtBQUssV0FBVyxDQUFDLEtBQUssQ0FBQztZQUN2QixLQUFLLFdBQVcsQ0FBQyxLQUFLO2dCQUNwQixJQUFJLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQyxDQUFDO2dCQUN0QixNQUFNO1NBQ1Q7SUFDSCxDQUFDO0lBRUQsd0NBQVUsR0FBVixVQUFXLEtBQUssRUFBRSxJQUFJO1FBQ3BCLE9BQU8sSUFBSSxDQUFDLElBQUksQ0FBQztJQUNuQixDQUFDO0lBL0N5QjtRQUF6QixXQUFXLENBQUMsV0FBVyxDQUFDOztxREFBa0I7SUFFbEM7UUFBUixLQUFLLEVBQUU7MENBQVEsVUFBVTtzREFBbUI7SUFDbkM7UUFBVCxNQUFNLEVBQUU7O3VEQUE2QztJQUM3QztRQUFSLEtBQUssRUFBRTs7MERBQW1CO0lBRVU7UUFBcEMsWUFBWSxDQUFDLHFCQUFxQixDQUFDOzBDQUFlLFNBQVM7NkRBQXdCO0lBUHpFLG1CQUFtQjtRQVIvQixTQUFTLENBQUM7WUFDVCxRQUFRLEVBQUUsYUFBYTtZQUN2Qixrc0JBQXVDO1lBRXZDLGFBQWEsRUFBRSxpQkFBaUIsQ0FBQyxJQUFJO1lBQ3JDLFNBQVMsRUFBRSxFQUFFO1lBQ2IsZUFBZSxFQUFFLHVCQUF1QixDQUFDLE1BQU07O1NBQ2hELENBQUM7aURBWW1DLFVBQVU7T0FYbEMsbUJBQW1CLENBaUQvQjtJQUFELDBCQUFDO0NBQUEsQUFqREQsSUFpREM7U0FqRFksbUJBQW1CIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgSW5wdXQsXG4gIE91dHB1dCxcbiAgRXZlbnRFbWl0dGVyLFxuICBDb21wb25lbnQsXG4gIFZpZXdFbmNhcHN1bGF0aW9uLFxuICBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneSxcbiAgRWxlbWVudFJlZixcbiAgQWZ0ZXJWaWV3SW5pdCxcbiAgUXVlcnlMaXN0LFxuICBIb3N0QmluZGluZyxcbiAgVmlld0NoaWxkcmVuXG59IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgT2JzZXJ2YWJsZSB9IGZyb20gJ3J4anMnO1xuaW1wb3J0IHsgUnVmS2V5Ym9hcmROYXZpZ2F0aW9uLCBSdWZLZXlDb2RlcyB9IGZyb20gJy4uL2lucHV0L2tleWJvYXJkJztcbmltcG9ydCB7IFJ1ZkZvY3VzYWJsZURpcmVjdGl2ZSB9IGZyb20gJy4uL3V0aWxzL2ZvY3VzYWJsZSc7XG5pbXBvcnQgeyBSdWZCYXNlSXRlbSB9IGZyb20gJy4uL2NvbW1vbi9iYXNlLWl0ZW0nO1xuXG5leHBvcnQgaW50ZXJmYWNlIFJ1ZlNpdGVtYXBJdGVtIGV4dGVuZHMgUnVmQmFzZUl0ZW0ge1xuICBjaGlsZHJlbjogUnVmU2l0ZW1hcEl0ZW1bXTtcbiAgY29udGV4dD86IHN0cmluZztcbn1cblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAncnVmLXNpdGVtYXAnLFxuICB0ZW1wbGF0ZVVybDogJy4vc2l0ZW1hcC5jb21wb25lbnQuaHRtbCcsXG4gIHN0eWxlVXJsczogWycuL3NpdGVtYXAuY29tcG9uZW50LnNjc3MnXSxcbiAgZW5jYXBzdWxhdGlvbjogVmlld0VuY2Fwc3VsYXRpb24uTm9uZSxcbiAgcHJvdmlkZXJzOiBbXSxcbiAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2hcbn0pXG5leHBvcnQgY2xhc3MgUnVmU2l0ZW1hcENvbXBvbmVudCBpbXBsZW1lbnRzIEFmdGVyVmlld0luaXQge1xuICBASG9zdEJpbmRpbmcoJ2F0dHIucm9sZScpIHJvbGUgPSAnbWVudWJhcic7XG5cbiAgQElucHV0KCkgaXRlbXM6IE9ic2VydmFibGU8UnVmU2l0ZW1hcEl0ZW1bXT47XG4gIEBPdXRwdXQoKSBzZWxlY3QgPSBuZXcgRXZlbnRFbWl0dGVyPFJ1ZlNpdGVtYXBJdGVtPigpO1xuICBASW5wdXQoKSBkaXJlY3Rpb24gPSAncm93JztcblxuICBAVmlld0NoaWxkcmVuKFJ1ZkZvY3VzYWJsZURpcmVjdGl2ZSkgc2l0ZW1hcEl0ZW1zOiBRdWVyeUxpc3Q8UnVmRm9jdXNhYmxlRGlyZWN0aXZlPjtcblxuICBwcml2YXRlIF9rZXlib2FyZE5hdjogUnVmS2V5Ym9hcmROYXZpZ2F0aW9uO1xuXG4gIGNvbnN0cnVjdG9yKHByb3RlY3RlZCBfZWxlbWVudFJlZjogRWxlbWVudFJlZikge31cblxuICBuZ0FmdGVyVmlld0luaXQoKSB7XG4gICAgaWYgKHRoaXMuc2l0ZW1hcEl0ZW1zLmxlbmd0aCA+IDApIHtcbiAgICAgIHRoaXMuYWRkTmV3S2V5Ym9hcmROYXYoKTtcbiAgICB9XG4gICAgdGhpcy5zaXRlbWFwSXRlbXMuY2hhbmdlcy5zdWJzY3JpYmUoY2hhbmdlcyA9PiB7XG4gICAgICBpZiAodGhpcy5zaXRlbWFwSXRlbXMubGVuZ3RoID4gMCkge1xuICAgICAgICB0aGlzLmFkZE5ld0tleWJvYXJkTmF2KCk7XG4gICAgICB9XG4gICAgfSk7XG4gIH1cblxuICBhZGROZXdLZXlib2FyZE5hdigpIHtcbiAgICB0aGlzLl9rZXlib2FyZE5hdiA9IG5ldyBSdWZLZXlib2FyZE5hdmlnYXRpb24oKTtcbiAgICB0aGlzLl9rZXlib2FyZE5hdi5zZXREaXJlY3Rpb24odGhpcy5kaXJlY3Rpb24pO1xuICAgIHRoaXMuX2tleWJvYXJkTmF2LmluaXQodGhpcy5fZWxlbWVudFJlZiwgdGhpcy5zaXRlbWFwSXRlbXMpO1xuICAgIHRoaXMuX2tleWJvYXJkTmF2LmFkZFRhYkluZGV4KHRoaXMuc2l0ZW1hcEl0ZW1zKTtcbiAgfVxuXG4gIC8vIGVtaXQgdGhlIGN1cnJlbnRseSBzZWxlY3RlZFxuICBzZWxlY3RJdGVtKHNpdGVtYXBJdGVtOiBSdWZTaXRlbWFwSXRlbSkge1xuICAgIHRoaXMuc2VsZWN0LmVtaXQoc2l0ZW1hcEl0ZW0pO1xuICB9XG5cbiAgb25LZXkoZXZlbnQ6IEtleWJvYXJkRXZlbnQsIGl0ZW06IFJ1ZlNpdGVtYXBJdGVtKSB7XG4gICAgdGhpcy5fa2V5Ym9hcmROYXYub25LZXlEb3duKGV2ZW50KTtcbiAgICBzd2l0Y2ggKGV2ZW50LmtleUNvZGUpIHtcbiAgICAgIGNhc2UgUnVmS2V5Q29kZXMuRU5URVI6XG4gICAgICBjYXNlIFJ1ZktleUNvZGVzLlNQQUNFOlxuICAgICAgICB0aGlzLnNlbGVjdEl0ZW0oaXRlbSk7XG4gICAgICAgIGJyZWFrO1xuICAgIH1cbiAgfVxuXG4gIHVuaXF1ZUl0ZW0oaW5kZXgsIGl0ZW0pIHtcbiAgICByZXR1cm4gaXRlbS5wYXRoO1xuICB9XG59XG4iXX0=