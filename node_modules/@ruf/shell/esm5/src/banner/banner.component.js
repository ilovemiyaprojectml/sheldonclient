import * as tslib_1 from "tslib";
import { ChangeDetectorRef, Component, Input, ViewEncapsulation, Directive, ContentChild, ChangeDetectionStrategy } from '@angular/core';
import { RufShellIntl } from '../utils/shell-intl';
var RufBannerRowDirective = /** @class */ (function () {
    function RufBannerRowDirective() {
    }
    RufBannerRowDirective = tslib_1.__decorate([
        Directive({
            selector: 'ruf-banner-row' // tslint:disable-line
        })
    ], RufBannerRowDirective);
    return RufBannerRowDirective;
}());
export { RufBannerRowDirective };
var RufBannerControlsDirective = /** @class */ (function () {
    function RufBannerControlsDirective() {
    }
    RufBannerControlsDirective = tslib_1.__decorate([
        Directive({
            selector: '[rufBannerControls]' // tslint:disable-line
        })
    ], RufBannerControlsDirective);
    return RufBannerControlsDirective;
}());
export { RufBannerControlsDirective };
var RufBannerBrandComponent = /** @class */ (function () {
    function RufBannerBrandComponent(_intl, changeDetectorRef) {
        this._intl = _intl;
        this.logoClass = 'fis-logo';
        this.showLogo = true;
        this._intlChanges = _intl.changes.subscribe(function () { return changeDetectorRef.markForCheck(); });
    }
    Object.defineProperty(RufBannerBrandComponent.prototype, "altText", {
        get: function () {
            return this._altText || this._intl.banner.altText;
        },
        set: function (value) {
            this._altText = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(RufBannerBrandComponent.prototype, "ariaLabel", {
        get: function () {
            return this._ariaLabel || this._intl.banner.aria.label;
        },
        set: function (value) {
            this._ariaLabel = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(RufBannerBrandComponent.prototype, "ariaLabelledby", {
        get: function () {
            return this._ariaLabelledby || this._intl.banner.aria.labelledBy;
        },
        set: function (value) {
            this._ariaLabel = value;
        },
        enumerable: true,
        configurable: true
    });
    RufBannerBrandComponent.prototype.ngOnDestroy = function () {
        this._intlChanges.unsubscribe();
    };
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", String)
    ], RufBannerBrandComponent.prototype, "logoUrl", void 0);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", String)
    ], RufBannerBrandComponent.prototype, "title", void 0);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", Object)
    ], RufBannerBrandComponent.prototype, "logoClass", void 0);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", Object)
    ], RufBannerBrandComponent.prototype, "showLogo", void 0);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", String),
        tslib_1.__metadata("design:paramtypes", [String])
    ], RufBannerBrandComponent.prototype, "altText", null);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", String),
        tslib_1.__metadata("design:paramtypes", [String])
    ], RufBannerBrandComponent.prototype, "ariaLabel", null);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", String),
        tslib_1.__metadata("design:paramtypes", [String])
    ], RufBannerBrandComponent.prototype, "ariaLabelledby", null);
    RufBannerBrandComponent = tslib_1.__decorate([
        Component({
            selector: 'ruf-banner-brand',
            template: "\n    <div rufId [class]=\"'ruf-banner-brand-logo ' + (!logoUrl && logoClass)\" *ngIf=\"showLogo\" >\n      <span hidden=\"true\" aria-hidden=\"false\" [attr.aria-label]=\"ariaLabel\"\n      [attr.aria-labelledby]=\"ariaLabelledby\">{{ariaLabel}}</span>\n      <img rufId *ngIf=\"logoUrl\" [src]=\"logoUrl\" [attr.alt]=\"altText\">\n    </div>\n    <div rufId class=\"ruf-toolbar-separator\" *ngIf=\"title && showLogo\"></div>\n    <h1 *ngIf=\"title\" class=\"ruf-banner-brand-title\">{{title}}</h1>\n  ",
            encapsulation: ViewEncapsulation.None,
            changeDetection: ChangeDetectionStrategy.OnPush
        }),
        tslib_1.__metadata("design:paramtypes", [RufShellIntl, ChangeDetectorRef])
    ], RufBannerBrandComponent);
    return RufBannerBrandComponent;
}());
export { RufBannerBrandComponent };
var RufBannerComponent = /** @class */ (function () {
    function RufBannerComponent() {
    }
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", String)
    ], RufBannerComponent.prototype, "color", void 0);
    tslib_1.__decorate([
        ContentChild(RufBannerControlsDirective, { static: false }),
        tslib_1.__metadata("design:type", RufBannerControlsDirective)
    ], RufBannerComponent.prototype, "controls", void 0);
    RufBannerComponent = tslib_1.__decorate([
        Component({
            selector: 'ruf-banner',
            template: "<header class=\"ruf-banner-header\" role=\"banner\">\n  <ruf-toolbar [color]=\"color\" class=\"ruf-banner-toolbar\" rufId=\"banner_toolbar\">\n    <ng-content></ng-content>\n    <div *ngIf=\"controls\" class=\"ruf-banner-filler\"></div>\n    <ng-content select=\"[rufBannerControls]\"></ng-content>\n    <ng-content select=\"ruf-banner-row\" ngProjectAs=\"ruf-toolbar-row\"></ng-content>\n  </ruf-toolbar>\n</header>\n",
            encapsulation: ViewEncapsulation.None,
            styles: ["ruf-banner{display:block;flex-shrink:0;min-height:3rem;overflow:hidden;z-index:100}.ruf-banner-toolbar{height:inherit}.ruf-banner-toolbar ruf-banner-row,.ruf-banner-toolbar ruf-toolbar-row{margin:0 auto;padding:0;width:100%}.ruf-banner-header{min-height:inherit}ruf-banner-brand{-webkit-box-align:center;align-items:center;display:-webkit-box;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;flex-direction:row;height:3rem}ruf-banner-brand .ruf-toolbar-separator{display:none}.ruf-banner-filler{-webkit-box-flex:1;flex:1 1 auto}.ruf-banner-brand-logo{line-height:0}.ruf-banner-brand-logo.fis-logo{background-size:4.375rem;height:2.375rem;max-width:4.375rem;width:4.375rem}.ruf-banner-brand-title{display:none;white-space:nowrap}@media (min-width:960px){.ruf-banner-brand-title,ruf-banner-brand .ruf-toolbar-separator{display:block}}"]
        }),
        tslib_1.__metadata("design:paramtypes", [])
    ], RufBannerComponent);
    return RufBannerComponent;
}());
export { RufBannerComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmFubmVyLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BydWYvc2hlbGwvIiwic291cmNlcyI6WyJzcmMvYmFubmVyL2Jhbm5lci5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFDTCxpQkFBaUIsRUFDakIsU0FBUyxFQUNULEtBQUssRUFDTCxpQkFBaUIsRUFDakIsU0FBUyxFQUNULFlBQVksRUFDWix1QkFBdUIsRUFHeEIsTUFBTSxlQUFlLENBQUM7QUFHdkIsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBS25EO0lBQUE7SUFBb0MsQ0FBQztJQUF4QixxQkFBcUI7UUFIakMsU0FBUyxDQUFDO1lBQ1QsUUFBUSxFQUFFLGdCQUFnQixDQUFDLHNCQUFzQjtTQUNsRCxDQUFDO09BQ1cscUJBQXFCLENBQUc7SUFBRCw0QkFBQztDQUFBLEFBQXJDLElBQXFDO1NBQXhCLHFCQUFxQjtBQUtsQztJQUFBO0lBQXlDLENBQUM7SUFBN0IsMEJBQTBCO1FBSHRDLFNBQVMsQ0FBQztZQUNULFFBQVEsRUFBRSxxQkFBcUIsQ0FBQyxzQkFBc0I7U0FDdkQsQ0FBQztPQUNXLDBCQUEwQixDQUFHO0lBQUQsaUNBQUM7Q0FBQSxBQUExQyxJQUEwQztTQUE3QiwwQkFBMEI7QUFnQnZDO0lBa0NFLGlDQUFvQixLQUFtQixFQUFFLGlCQUFvQztRQUF6RCxVQUFLLEdBQUwsS0FBSyxDQUFjO1FBM0I5QixjQUFTLEdBQUcsVUFBVSxDQUFDO1FBQ3ZCLGFBQVEsR0FBRyxJQUFJLENBQUM7UUEyQnZCLElBQUksQ0FBQyxZQUFZLEdBQUcsS0FBSyxDQUFDLE9BQU8sQ0FBQyxTQUFTLENBQUMsY0FBTSxPQUFBLGlCQUFpQixDQUFDLFlBQVksRUFBRSxFQUFoQyxDQUFnQyxDQUFDLENBQUM7SUFDdEYsQ0FBQztJQXpCRCxzQkFBSSw0Q0FBTzthQUFYO1lBQ0UsT0FBTyxJQUFJLENBQUMsUUFBUSxJQUFJLElBQUksQ0FBQyxLQUFLLENBQUMsTUFBTSxDQUFDLE9BQU8sQ0FBQztRQUNwRCxDQUFDO2FBQ0QsVUFBWSxLQUFhO1lBQ3ZCLElBQUksQ0FBQyxRQUFRLEdBQUcsS0FBSyxDQUFDO1FBQ3hCLENBQUM7OztPQUhBO0lBTUQsc0JBQUksOENBQVM7YUFBYjtZQUNFLE9BQU8sSUFBSSxDQUFDLFVBQVUsSUFBSSxJQUFJLENBQUMsS0FBSyxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDO1FBQ3pELENBQUM7YUFDRCxVQUFlLEtBQWE7WUFDMUIsSUFBSSxDQUFDLFVBQVUsR0FBRyxLQUFLLENBQUM7UUFDMUIsQ0FBQzs7O09BSEE7SUFNRCxzQkFBSSxtREFBYzthQUFsQjtZQUNFLE9BQU8sSUFBSSxDQUFDLGVBQWUsSUFBSSxJQUFJLENBQUMsS0FBSyxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDO1FBQ25FLENBQUM7YUFDRCxVQUFvQixLQUFhO1lBQy9CLElBQUksQ0FBQyxVQUFVLEdBQUcsS0FBSyxDQUFDO1FBQzFCLENBQUM7OztPQUhBO0lBU0QsNkNBQVcsR0FBWDtRQUNFLElBQUksQ0FBQyxZQUFZLENBQUMsV0FBVyxFQUFFLENBQUM7SUFDbEMsQ0FBQztJQW5DUTtRQUFSLEtBQUssRUFBRTs7NERBQWlCO0lBQ2hCO1FBQVIsS0FBSyxFQUFFOzswREFBZTtJQUNkO1FBQVIsS0FBSyxFQUFFOzs4REFBd0I7SUFDdkI7UUFBUixLQUFLLEVBQUU7OzZEQUFpQjtJQUd6QjtRQURDLEtBQUssRUFBRTs7OzBEQUdQO0lBTUQ7UUFEQyxLQUFLLEVBQUU7Ozs0REFHUDtJQU1EO1FBREMsS0FBSyxFQUFFOzs7aUVBR1A7SUE3QlUsdUJBQXVCO1FBZG5DLFNBQVMsQ0FBQztZQUNULFFBQVEsRUFBRSxrQkFBa0I7WUFDNUIsUUFBUSxFQUFFLHlmQVFUO1lBQ0QsYUFBYSxFQUFFLGlCQUFpQixDQUFDLElBQUk7WUFDckMsZUFBZSxFQUFFLHVCQUF1QixDQUFDLE1BQU07U0FDaEQsQ0FBQztpREFtQzJCLFlBQVksRUFBcUIsaUJBQWlCO09BbENsRSx1QkFBdUIsQ0F5Q25DO0lBQUQsOEJBQUM7Q0FBQSxBQXpDRCxJQXlDQztTQXpDWSx1QkFBdUI7QUFpRHBDO0lBSUU7SUFBZSxDQUFDO0lBSFA7UUFBUixLQUFLLEVBQUU7O3FEQUFlO0lBQ29DO1FBQTFELFlBQVksQ0FBQywwQkFBMEIsRUFBRSxFQUFDLE1BQU0sRUFBRSxLQUFLLEVBQUMsQ0FBQzswQ0FBVywwQkFBMEI7d0RBQUM7SUFGckYsa0JBQWtCO1FBTjlCLFNBQVMsQ0FBQztZQUNULFFBQVEsRUFBRSxZQUFZO1lBQ3RCLDhhQUFzQztZQUV0QyxhQUFhLEVBQUUsaUJBQWlCLENBQUMsSUFBSTs7U0FDdEMsQ0FBQzs7T0FDVyxrQkFBa0IsQ0FLOUI7SUFBRCx5QkFBQztDQUFBLEFBTEQsSUFLQztTQUxZLGtCQUFrQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIENoYW5nZURldGVjdG9yUmVmLFxuICBDb21wb25lbnQsXG4gIElucHV0LFxuICBWaWV3RW5jYXBzdWxhdGlvbixcbiAgRGlyZWN0aXZlLFxuICBDb250ZW50Q2hpbGQsXG4gIENoYW5nZURldGVjdGlvblN0cmF0ZWd5LFxuICBIb3N0QmluZGluZyxcbiAgT25EZXN0cm95XG59IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5pbXBvcnQgeyBTdWJzY3JpcHRpb24gfSBmcm9tICdyeGpzJztcbmltcG9ydCB7IFJ1ZlNoZWxsSW50bCB9IGZyb20gJy4uL3V0aWxzL3NoZWxsLWludGwnO1xuXG5ARGlyZWN0aXZlKHtcbiAgc2VsZWN0b3I6ICdydWYtYmFubmVyLXJvdycgLy8gdHNsaW50OmRpc2FibGUtbGluZVxufSlcbmV4cG9ydCBjbGFzcyBSdWZCYW5uZXJSb3dEaXJlY3RpdmUge31cblxuQERpcmVjdGl2ZSh7XG4gIHNlbGVjdG9yOiAnW3J1ZkJhbm5lckNvbnRyb2xzXScgLy8gdHNsaW50OmRpc2FibGUtbGluZVxufSlcbmV4cG9ydCBjbGFzcyBSdWZCYW5uZXJDb250cm9sc0RpcmVjdGl2ZSB7fVxuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdydWYtYmFubmVyLWJyYW5kJyxcbiAgdGVtcGxhdGU6IGBcbiAgICA8ZGl2IHJ1ZklkIFtjbGFzc109XCIncnVmLWJhbm5lci1icmFuZC1sb2dvICcgKyAoIWxvZ29VcmwgJiYgbG9nb0NsYXNzKVwiICpuZ0lmPVwic2hvd0xvZ29cIiA+XG4gICAgICA8c3BhbiBoaWRkZW49XCJ0cnVlXCIgYXJpYS1oaWRkZW49XCJmYWxzZVwiIFthdHRyLmFyaWEtbGFiZWxdPVwiYXJpYUxhYmVsXCJcbiAgICAgIFthdHRyLmFyaWEtbGFiZWxsZWRieV09XCJhcmlhTGFiZWxsZWRieVwiPnt7YXJpYUxhYmVsfX08L3NwYW4+XG4gICAgICA8aW1nIHJ1ZklkICpuZ0lmPVwibG9nb1VybFwiIFtzcmNdPVwibG9nb1VybFwiIFthdHRyLmFsdF09XCJhbHRUZXh0XCI+XG4gICAgPC9kaXY+XG4gICAgPGRpdiBydWZJZCBjbGFzcz1cInJ1Zi10b29sYmFyLXNlcGFyYXRvclwiICpuZ0lmPVwidGl0bGUgJiYgc2hvd0xvZ29cIj48L2Rpdj5cbiAgICA8aDEgKm5nSWY9XCJ0aXRsZVwiIGNsYXNzPVwicnVmLWJhbm5lci1icmFuZC10aXRsZVwiPnt7dGl0bGV9fTwvaDE+XG4gIGAsXG4gIGVuY2Fwc3VsYXRpb246IFZpZXdFbmNhcHN1bGF0aW9uLk5vbmUsXG4gIGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoXG59KVxuZXhwb3J0IGNsYXNzIFJ1ZkJhbm5lckJyYW5kQ29tcG9uZW50IGltcGxlbWVudHMgT25EZXN0cm95IHtcbiAgcHJpdmF0ZSBfaW50bENoYW5nZXM6IFN1YnNjcmlwdGlvbjtcbiAgcHJpdmF0ZSBfYWx0VGV4dDogc3RyaW5nO1xuICBwcml2YXRlIF9hcmlhTGFiZWw6IHN0cmluZztcbiAgcHJpdmF0ZSBfYXJpYUxhYmVsbGVkYnk6IHN0cmluZztcbiAgQElucHV0KCkgbG9nb1VybDogc3RyaW5nO1xuICBASW5wdXQoKSB0aXRsZTogc3RyaW5nO1xuICBASW5wdXQoKSBsb2dvQ2xhc3MgPSAnZmlzLWxvZ28nO1xuICBASW5wdXQoKSBzaG93TG9nbyA9IHRydWU7XG5cbiAgQElucHV0KClcbiAgZ2V0IGFsdFRleHQoKSB7XG4gICAgcmV0dXJuIHRoaXMuX2FsdFRleHQgfHwgdGhpcy5faW50bC5iYW5uZXIuYWx0VGV4dDtcbiAgfVxuICBzZXQgYWx0VGV4dCh2YWx1ZTogc3RyaW5nKSB7XG4gICAgdGhpcy5fYWx0VGV4dCA9IHZhbHVlO1xuICB9XG5cbiAgQElucHV0KClcbiAgZ2V0IGFyaWFMYWJlbCgpIHtcbiAgICByZXR1cm4gdGhpcy5fYXJpYUxhYmVsIHx8IHRoaXMuX2ludGwuYmFubmVyLmFyaWEubGFiZWw7XG4gIH1cbiAgc2V0IGFyaWFMYWJlbCAodmFsdWU6IHN0cmluZykge1xuICAgIHRoaXMuX2FyaWFMYWJlbCA9IHZhbHVlO1xuICB9XG5cbiAgQElucHV0KClcbiAgZ2V0IGFyaWFMYWJlbGxlZGJ5KCkge1xuICAgIHJldHVybiB0aGlzLl9hcmlhTGFiZWxsZWRieSB8fCB0aGlzLl9pbnRsLmJhbm5lci5hcmlhLmxhYmVsbGVkQnk7XG4gIH1cbiAgc2V0IGFyaWFMYWJlbGxlZGJ5ICh2YWx1ZTogc3RyaW5nKSB7XG4gICAgdGhpcy5fYXJpYUxhYmVsID0gdmFsdWU7XG4gIH1cblxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIF9pbnRsOiBSdWZTaGVsbEludGwsIGNoYW5nZURldGVjdG9yUmVmOiBDaGFuZ2VEZXRlY3RvclJlZikge1xuICAgIHRoaXMuX2ludGxDaGFuZ2VzID0gX2ludGwuY2hhbmdlcy5zdWJzY3JpYmUoKCkgPT4gY2hhbmdlRGV0ZWN0b3JSZWYubWFya0ZvckNoZWNrKCkpO1xuICB9XG5cbiAgbmdPbkRlc3Ryb3koKSB7XG4gICAgdGhpcy5faW50bENoYW5nZXMudW5zdWJzY3JpYmUoKTtcbiAgfVxufVxuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdydWYtYmFubmVyJyxcbiAgdGVtcGxhdGVVcmw6ICcuL2Jhbm5lci5jb21wb25lbnQuaHRtbCcsXG4gIHN0eWxlVXJsczogWycuL2Jhbm5lci5jb21wb25lbnQuc2NzcyddLFxuICBlbmNhcHN1bGF0aW9uOiBWaWV3RW5jYXBzdWxhdGlvbi5Ob25lXG59KVxuZXhwb3J0IGNsYXNzIFJ1ZkJhbm5lckNvbXBvbmVudCB7XG4gIEBJbnB1dCgpIGNvbG9yOiBzdHJpbmc7XG4gIEBDb250ZW50Q2hpbGQoUnVmQmFubmVyQ29udHJvbHNEaXJlY3RpdmUsIHtzdGF0aWM6IGZhbHNlfSkgY29udHJvbHM6IFJ1ZkJhbm5lckNvbnRyb2xzRGlyZWN0aXZlO1xuXG4gIGNvbnN0cnVjdG9yKCkge31cbn1cbiJdfQ==