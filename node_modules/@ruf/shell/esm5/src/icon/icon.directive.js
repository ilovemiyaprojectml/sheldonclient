import * as tslib_1 from "tslib";
import { MatIcon } from '@angular/material/icon';
import { Directive, Self, Optional, Input, SimpleChange } from '@angular/core';
var RufIconDirective = /** @class */ (function () {
    function RufIconDirective(matIcon) {
        this.matIcon = matIcon;
        this.icon = '';
    }
    Object.defineProperty(RufIconDirective.prototype, "fisIcon", {
        set: function (val) {
            this.icon = val || '';
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(RufIconDirective.prototype, "rufIcon", {
        set: function (val) {
            this.icon = val || '';
        },
        enumerable: true,
        configurable: true
    });
    RufIconDirective.prototype.ngOnChanges = function (changes) {
        // the matIcon is intentionally left unchanged if fisIcon or rufIcon is set to empty:
        // it is assumed that fontSet and fontIcon are changed appropriately.
        if (this.matIcon &&
            ((changes.fisIcon && changes.fisIcon.currentValue) ||
                (changes.rufIcon && changes.rufIcon.currentValue))) {
            var currentIcon = changes.fisIcon ? changes.fisIcon.currentValue : changes.rufIcon.currentValue;
            this.matIcon.fontSet = 'fisfont';
            this.matIcon.fontIcon = 'fis-icon-' + currentIcon;
            var chg = new SimpleChange('', this.matIcon.fontIcon, true);
            this.matIcon.ngOnChanges({ fontIcon: chg });
        }
    };
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", String),
        tslib_1.__metadata("design:paramtypes", [String])
    ], RufIconDirective.prototype, "fisIcon", null);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", String),
        tslib_1.__metadata("design:paramtypes", [String])
    ], RufIconDirective.prototype, "rufIcon", null);
    RufIconDirective = tslib_1.__decorate([
        Directive({ selector: '[fisIcon], [rufIcon]' }),
        tslib_1.__param(0, Self()),
        tslib_1.__param(0, Optional()),
        tslib_1.__metadata("design:paramtypes", [MatIcon])
    ], RufIconDirective);
    return RufIconDirective;
}());
export { RufIconDirective };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaWNvbi5kaXJlY3RpdmUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AcnVmL3NoZWxsLyIsInNvdXJjZXMiOlsic3JjL2ljb24vaWNvbi5kaXJlY3RpdmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxPQUFPLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQztBQUNqRCxPQUFPLEVBQUUsU0FBUyxFQUFFLElBQUksRUFBRSxRQUFRLEVBQVUsS0FBSyxFQUFFLFlBQVksRUFBNEIsTUFBTSxlQUFlLENBQUM7QUFHakg7SUFhRSwwQkFHVSxPQUFnQjtRQUFoQixZQUFPLEdBQVAsT0FBTyxDQUFTO1FBZjFCLFNBQUksR0FBRyxFQUFFLENBQUM7SUFnQlAsQ0FBQztJQWJKLHNCQUFJLHFDQUFPO2FBQVgsVUFBWSxHQUFXO1lBQ3JCLElBQUksQ0FBQyxJQUFJLEdBQUcsR0FBRyxJQUFJLEVBQUUsQ0FBQztRQUN4QixDQUFDOzs7T0FBQTtJQUdELHNCQUFJLHFDQUFPO2FBQVgsVUFBWSxHQUFXO1lBQ3JCLElBQUksQ0FBQyxJQUFJLEdBQUcsR0FBRyxJQUFJLEVBQUUsQ0FBQztRQUN4QixDQUFDOzs7T0FBQTtJQVFELHNDQUFXLEdBQVgsVUFBWSxPQUFzQjtRQUNoQyxxRkFBcUY7UUFDckYscUVBQXFFO1FBQ3JFLElBQUksSUFBSSxDQUFDLE9BQU87WUFDZCxDQUNFLENBQUMsT0FBTyxDQUFDLE9BQU8sSUFBSSxPQUFPLENBQUMsT0FBTyxDQUFDLFlBQVksQ0FBQztnQkFDakQsQ0FBQyxPQUFPLENBQUMsT0FBTyxJQUFJLE9BQU8sQ0FBQyxPQUFPLENBQUMsWUFBWSxDQUFDLENBQ2xELEVBQUU7WUFDSCxJQUFNLFdBQVcsR0FBRyxPQUFPLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLFlBQVksQ0FBQyxDQUFDLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxZQUFZLENBQUM7WUFDbEcsSUFBSSxDQUFDLE9BQU8sQ0FBQyxPQUFPLEdBQUcsU0FBUyxDQUFDO1lBQ2pDLElBQUksQ0FBQyxPQUFPLENBQUMsUUFBUSxHQUFHLFdBQVcsR0FBRyxXQUFXLENBQUM7WUFDbEQsSUFBTSxHQUFHLEdBQUcsSUFBSSxZQUFZLENBQUMsRUFBRSxFQUFFLElBQUksQ0FBQyxPQUFPLENBQUMsUUFBUSxFQUFFLElBQUksQ0FBQyxDQUFDO1lBQzlELElBQUksQ0FBQyxPQUFPLENBQUMsV0FBVyxDQUFDLEVBQUUsUUFBUSxFQUFFLEdBQUcsRUFBRSxDQUFDLENBQUM7U0FDN0M7SUFDSCxDQUFDO0lBN0JEO1FBREMsS0FBSyxFQUFFOzs7bURBR1A7SUFHRDtRQURDLEtBQUssRUFBRTs7O21EQUdQO0lBWFUsZ0JBQWdCO1FBRDVCLFNBQVMsQ0FBQyxFQUFFLFFBQVEsRUFBRSxzQkFBc0IsRUFBRSxDQUFDO1FBZTNDLG1CQUFBLElBQUksRUFBRSxDQUFBO1FBQ04sbUJBQUEsUUFBUSxFQUFFLENBQUE7aURBQ00sT0FBTztPQWhCZixnQkFBZ0IsQ0FrQzVCO0lBQUQsdUJBQUM7Q0FBQSxBQWxDRCxJQWtDQztTQWxDWSxnQkFBZ0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBNYXRJY29uIH0gZnJvbSAnQGFuZ3VsYXIvbWF0ZXJpYWwvaWNvbic7XG5pbXBvcnQgeyBEaXJlY3RpdmUsIFNlbGYsIE9wdGlvbmFsLCBPbkluaXQsIElucHV0LCBTaW1wbGVDaGFuZ2UsIE9uQ2hhbmdlcywgU2ltcGxlQ2hhbmdlcyB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5ARGlyZWN0aXZlKHsgc2VsZWN0b3I6ICdbZmlzSWNvbl0sIFtydWZJY29uXScgfSlcbmV4cG9ydCBjbGFzcyBSdWZJY29uRGlyZWN0aXZlIGltcGxlbWVudHMgT25DaGFuZ2VzIHtcbiAgaWNvbiA9ICcnO1xuXG4gIEBJbnB1dCgpXG4gIHNldCBmaXNJY29uKHZhbDogc3RyaW5nKSB7XG4gICAgdGhpcy5pY29uID0gdmFsIHx8ICcnO1xuICB9XG5cbiAgQElucHV0KClcbiAgc2V0IHJ1Zkljb24odmFsOiBzdHJpbmcpIHtcbiAgICB0aGlzLmljb24gPSB2YWwgfHwgJyc7XG4gIH1cblxuICBjb25zdHJ1Y3RvcihcbiAgICBAU2VsZigpXG4gICAgQE9wdGlvbmFsKClcbiAgICBwcml2YXRlIG1hdEljb246IE1hdEljb25cbiAgKSB7fVxuXG4gIG5nT25DaGFuZ2VzKGNoYW5nZXM6IFNpbXBsZUNoYW5nZXMpIHtcbiAgICAvLyB0aGUgbWF0SWNvbiBpcyBpbnRlbnRpb25hbGx5IGxlZnQgdW5jaGFuZ2VkIGlmIGZpc0ljb24gb3IgcnVmSWNvbiBpcyBzZXQgdG8gZW1wdHk6XG4gICAgLy8gaXQgaXMgYXNzdW1lZCB0aGF0IGZvbnRTZXQgYW5kIGZvbnRJY29uIGFyZSBjaGFuZ2VkIGFwcHJvcHJpYXRlbHkuXG4gICAgaWYgKHRoaXMubWF0SWNvbiAmJlxuICAgICAgKFxuICAgICAgICAoY2hhbmdlcy5maXNJY29uICYmIGNoYW5nZXMuZmlzSWNvbi5jdXJyZW50VmFsdWUpIHx8XG4gICAgICAgIChjaGFuZ2VzLnJ1Zkljb24gJiYgY2hhbmdlcy5ydWZJY29uLmN1cnJlbnRWYWx1ZSlcbiAgICAgICkpIHtcbiAgICAgIGNvbnN0IGN1cnJlbnRJY29uID0gY2hhbmdlcy5maXNJY29uID8gY2hhbmdlcy5maXNJY29uLmN1cnJlbnRWYWx1ZSA6IGNoYW5nZXMucnVmSWNvbi5jdXJyZW50VmFsdWU7XG4gICAgICB0aGlzLm1hdEljb24uZm9udFNldCA9ICdmaXNmb250JztcbiAgICAgIHRoaXMubWF0SWNvbi5mb250SWNvbiA9ICdmaXMtaWNvbi0nICsgY3VycmVudEljb247XG4gICAgICBjb25zdCBjaGcgPSBuZXcgU2ltcGxlQ2hhbmdlKCcnLCB0aGlzLm1hdEljb24uZm9udEljb24sIHRydWUpO1xuICAgICAgdGhpcy5tYXRJY29uLm5nT25DaGFuZ2VzKHsgZm9udEljb246IGNoZyB9KTtcbiAgICB9XG4gIH1cbn1cbiJdfQ==