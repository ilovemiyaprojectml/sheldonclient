import * as tslib_1 from "tslib";
import { MatButton } from '@angular/material/button';
import { Input, HostBinding, Directive, Self, Optional } from '@angular/core';
let RufIconButtonDirective = class RufIconButtonDirective {
    constructor(_matButton) {
        this._active = false;
        this._dark = false;
        this._activeClass = 'activeClass';
        this.fontSet = 'fisfont';
        // can be used in a container that supports the ruf-square class
        this.square = true;
        this.darkClass = this._dark;
        this.activeClass = false;
        this.primaryClass = false;
        this.transition = 'background-color 1s ease';
        this.tabindex = 0;
        if (_matButton) {
            _matButton.disableRipple = true;
        }
    }
    set activeColor(color) {
        if (color === 'primary') {
            this._activeClass = 'primaryClass';
        }
    }
    set active(isActive) {
        this._active = !!isActive;
        this[this._activeClass] = this._active;
    }
    get active() {
        return this._active;
    }
    set dark(isActive) {
        this._dark = isActive;
        this.darkClass = isActive === '' || isActive;
    }
    get dark() {
        return this._dark;
    }
};
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", Object)
], RufIconButtonDirective.prototype, "fontSet", void 0);
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", String)
], RufIconButtonDirective.prototype, "fontIcon", void 0);
tslib_1.__decorate([
    HostBinding('class.ruf-square'),
    tslib_1.__metadata("design:type", Object)
], RufIconButtonDirective.prototype, "square", void 0);
tslib_1.__decorate([
    HostBinding('class.ruf-background-dark'),
    tslib_1.__metadata("design:type", Object)
], RufIconButtonDirective.prototype, "darkClass", void 0);
tslib_1.__decorate([
    HostBinding('class.ruf-background-darker'),
    tslib_1.__metadata("design:type", Object)
], RufIconButtonDirective.prototype, "activeClass", void 0);
tslib_1.__decorate([
    HostBinding('class.ruf-background-primary-dark'),
    tslib_1.__metadata("design:type", Object)
], RufIconButtonDirective.prototype, "primaryClass", void 0);
tslib_1.__decorate([
    HostBinding('style.transition'),
    tslib_1.__metadata("design:type", Object)
], RufIconButtonDirective.prototype, "transition", void 0);
tslib_1.__decorate([
    HostBinding('attr.tabindex'),
    tslib_1.__metadata("design:type", Object)
], RufIconButtonDirective.prototype, "tabindex", void 0);
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", Object),
    tslib_1.__metadata("design:paramtypes", [Object])
], RufIconButtonDirective.prototype, "activeColor", null);
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", Boolean),
    tslib_1.__metadata("design:paramtypes", [Boolean])
], RufIconButtonDirective.prototype, "active", null);
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", Object),
    tslib_1.__metadata("design:paramtypes", [Object])
], RufIconButtonDirective.prototype, "dark", null);
RufIconButtonDirective = tslib_1.__decorate([
    Directive({
        selector: '[rufIconButton]',
        exportAs: 'rufIconButton'
    }),
    tslib_1.__param(0, Self()),
    tslib_1.__param(0, Optional()),
    tslib_1.__metadata("design:paramtypes", [MatButton])
], RufIconButtonDirective);
export { RufIconButtonDirective };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaWNvbi1idXR0b24uZGlyZWN0aXZlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQHJ1Zi9zaGVsbC8iLCJzb3VyY2VzIjpbInNyYy9pY29uLWJ1dHRvbi9pY29uLWJ1dHRvbi5kaXJlY3RpdmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSwwQkFBMEIsQ0FBQztBQUNyRCxPQUFPLEVBQUUsS0FBSyxFQUFFLFdBQVcsRUFBRSxTQUFTLEVBQUUsSUFBSSxFQUFFLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQU05RSxJQUFhLHNCQUFzQixHQUFuQyxNQUFhLHNCQUFzQjtJQWtCakMsWUFHRSxVQUFxQjtRQXBCZixZQUFPLEdBQUcsS0FBSyxDQUFDO1FBQ2hCLFVBQUssR0FBRyxLQUFLLENBQUM7UUFDZCxpQkFBWSxHQUFHLGFBQWEsQ0FBQztRQUU1QixZQUFPLEdBQUcsU0FBUyxDQUFDO1FBRzdCLGdFQUFnRTtRQUMvQixXQUFNLEdBQUcsSUFBSSxDQUFDO1FBQ0wsY0FBUyxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUM7UUFDckIsZ0JBQVcsR0FBRyxLQUFLLENBQUM7UUFDZCxpQkFBWSxHQUFHLEtBQUssQ0FBQztRQUV0QyxlQUFVLEdBQUcsMEJBQTBCLENBQUM7UUFFM0MsYUFBUSxHQUFHLENBQUMsQ0FBQztRQU96QyxJQUFJLFVBQVUsRUFBRTtZQUNkLFVBQVUsQ0FBQyxhQUFhLEdBQUcsSUFBSSxDQUFDO1NBQ2pDO0lBQ0gsQ0FBQztJQUdELElBQUksV0FBVyxDQUFDLEtBQUs7UUFDbkIsSUFBSSxLQUFLLEtBQUssU0FBUyxFQUFFO1lBQ3ZCLElBQUksQ0FBQyxZQUFZLEdBQUcsY0FBYyxDQUFDO1NBQ3BDO0lBQ0gsQ0FBQztJQUdELElBQUksTUFBTSxDQUFDLFFBQWlCO1FBQzFCLElBQUksQ0FBQyxPQUFPLEdBQUcsQ0FBQyxDQUFDLFFBQVEsQ0FBQztRQUMxQixJQUFJLENBQUMsSUFBSSxDQUFDLFlBQVksQ0FBQyxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUM7SUFDekMsQ0FBQztJQUVELElBQUksTUFBTTtRQUNSLE9BQU8sSUFBSSxDQUFDLE9BQU8sQ0FBQztJQUN0QixDQUFDO0lBR0QsSUFBSSxJQUFJLENBQUMsUUFBUTtRQUNmLElBQUksQ0FBQyxLQUFLLEdBQUcsUUFBUSxDQUFDO1FBQ3RCLElBQUksQ0FBQyxTQUFTLEdBQVEsUUFBUSxLQUFLLEVBQUUsSUFBSSxRQUFRLENBQUM7SUFDcEQsQ0FBQztJQUVELElBQUksSUFBSTtRQUNOLE9BQU8sSUFBSSxDQUFDLEtBQUssQ0FBQztJQUNwQixDQUFDO0NBQ0YsQ0FBQTtBQWpEVTtJQUFSLEtBQUssRUFBRTs7dURBQXFCO0FBQ3BCO0lBQVIsS0FBSyxFQUFFOzt3REFBa0I7QUFHTztJQUFoQyxXQUFXLENBQUMsa0JBQWtCLENBQUM7O3NEQUFlO0FBQ0w7SUFBekMsV0FBVyxDQUFDLDJCQUEyQixDQUFDOzt5REFBd0I7QUFDckI7SUFBM0MsV0FBVyxDQUFDLDZCQUE2QixDQUFDOzsyREFBcUI7QUFDZDtJQUFqRCxXQUFXLENBQUMsbUNBQW1DLENBQUM7OzREQUFzQjtBQUV0QztJQUFoQyxXQUFXLENBQUMsa0JBQWtCLENBQUM7OzBEQUF5QztBQUUzQztJQUE3QixXQUFXLENBQUMsZUFBZSxDQUFDOzt3REFBYztBQWEzQztJQURDLEtBQUssRUFBRTs7O3lEQUtQO0FBR0Q7SUFEQyxLQUFLLEVBQUU7OztvREFJUDtBQU9EO0lBREMsS0FBSyxFQUFFOzs7a0RBSVA7QUFqRFUsc0JBQXNCO0lBSmxDLFNBQVMsQ0FBQztRQUNULFFBQVEsRUFBRSxpQkFBaUI7UUFDM0IsUUFBUSxFQUFFLGVBQWU7S0FDMUIsQ0FBQztJQW9CRyxtQkFBQSxJQUFJLEVBQUUsQ0FBQTtJQUNOLG1CQUFBLFFBQVEsRUFBRSxDQUFBOzZDQUNDLFNBQVM7R0FyQlosc0JBQXNCLENBc0RsQztTQXREWSxzQkFBc0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBNYXRCdXR0b24gfSBmcm9tICdAYW5ndWxhci9tYXRlcmlhbC9idXR0b24nO1xuaW1wb3J0IHsgSW5wdXQsIEhvc3RCaW5kaW5nLCBEaXJlY3RpdmUsIFNlbGYsIE9wdGlvbmFsIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbkBEaXJlY3RpdmUoe1xuICBzZWxlY3RvcjogJ1tydWZJY29uQnV0dG9uXScsXG4gIGV4cG9ydEFzOiAncnVmSWNvbkJ1dHRvbidcbn0pXG5leHBvcnQgY2xhc3MgUnVmSWNvbkJ1dHRvbkRpcmVjdGl2ZSB7XG4gIHByaXZhdGUgX2FjdGl2ZSA9IGZhbHNlO1xuICBwcml2YXRlIF9kYXJrID0gZmFsc2U7XG4gIHByaXZhdGUgX2FjdGl2ZUNsYXNzID0gJ2FjdGl2ZUNsYXNzJztcblxuICBASW5wdXQoKSBmb250U2V0ID0gJ2Zpc2ZvbnQnO1xuICBASW5wdXQoKSBmb250SWNvbjogc3RyaW5nO1xuXG4gIC8vIGNhbiBiZSB1c2VkIGluIGEgY29udGFpbmVyIHRoYXQgc3VwcG9ydHMgdGhlIHJ1Zi1zcXVhcmUgY2xhc3NcbiAgQEhvc3RCaW5kaW5nKCdjbGFzcy5ydWYtc3F1YXJlJykgc3F1YXJlID0gdHJ1ZTtcbiAgQEhvc3RCaW5kaW5nKCdjbGFzcy5ydWYtYmFja2dyb3VuZC1kYXJrJykgZGFya0NsYXNzID0gdGhpcy5fZGFyaztcbiAgQEhvc3RCaW5kaW5nKCdjbGFzcy5ydWYtYmFja2dyb3VuZC1kYXJrZXInKSBhY3RpdmVDbGFzcyA9IGZhbHNlO1xuICBASG9zdEJpbmRpbmcoJ2NsYXNzLnJ1Zi1iYWNrZ3JvdW5kLXByaW1hcnktZGFyaycpIHByaW1hcnlDbGFzcyA9IGZhbHNlO1xuXG4gIEBIb3N0QmluZGluZygnc3R5bGUudHJhbnNpdGlvbicpIHRyYW5zaXRpb24gPSAnYmFja2dyb3VuZC1jb2xvciAxcyBlYXNlJztcblxuICBASG9zdEJpbmRpbmcoJ2F0dHIudGFiaW5kZXgnKSB0YWJpbmRleCA9IDA7XG5cbiAgY29uc3RydWN0b3IoXG4gICAgQFNlbGYoKVxuICAgIEBPcHRpb25hbCgpXG4gICAgX21hdEJ1dHRvbjogTWF0QnV0dG9uXG4gICkge1xuICAgIGlmIChfbWF0QnV0dG9uKSB7XG4gICAgICBfbWF0QnV0dG9uLmRpc2FibGVSaXBwbGUgPSB0cnVlO1xuICAgIH1cbiAgfVxuXG4gIEBJbnB1dCgpXG4gIHNldCBhY3RpdmVDb2xvcihjb2xvcikge1xuICAgIGlmIChjb2xvciA9PT0gJ3ByaW1hcnknKSB7XG4gICAgICB0aGlzLl9hY3RpdmVDbGFzcyA9ICdwcmltYXJ5Q2xhc3MnO1xuICAgIH1cbiAgfVxuXG4gIEBJbnB1dCgpXG4gIHNldCBhY3RpdmUoaXNBY3RpdmU6IGJvb2xlYW4pIHtcbiAgICB0aGlzLl9hY3RpdmUgPSAhIWlzQWN0aXZlO1xuICAgIHRoaXNbdGhpcy5fYWN0aXZlQ2xhc3NdID0gdGhpcy5fYWN0aXZlO1xuICB9XG5cbiAgZ2V0IGFjdGl2ZSgpIHtcbiAgICByZXR1cm4gdGhpcy5fYWN0aXZlO1xuICB9XG5cbiAgQElucHV0KClcbiAgc2V0IGRhcmsoaXNBY3RpdmUpIHtcbiAgICB0aGlzLl9kYXJrID0gaXNBY3RpdmU7XG4gICAgdGhpcy5kYXJrQ2xhc3MgPSA8YW55PmlzQWN0aXZlID09PSAnJyB8fCBpc0FjdGl2ZTtcbiAgfVxuXG4gIGdldCBkYXJrKCkge1xuICAgIHJldHVybiB0aGlzLl9kYXJrO1xuICB9XG59XG4iXX0=