import * as tslib_1 from "tslib";
import { Directive, HostBinding, Input, Renderer2, ElementRef } from '@angular/core';
export const RUF_MARGIN_VALUES = ['none', 'auto', 'small', 'medium', 'large'];
let RufMarginDirective = class RufMarginDirective {
    constructor(el, renderer) {
        this.el = el;
        this.renderer = renderer;
        this.classPrefix = 'ruf-margin';
        this._positions = {
            rufMargin: ['-'],
            rufMarginVertical: ['-top-', '-bottom-'],
            rufMarginHorizontal: ['-left-', '-right-'],
            rufMarginTop: ['-top-'],
            rufMarginRight: ['-right-'],
            rufMarginBottom: ['-bottom-'],
            rufMarginLeft: ['-left-']
        };
        this.rufMargin = '';
        this.rufMarginVertical = '';
        this.rufMarginHorizontal = '';
        this.rufMarginTop = '';
        this.rufMarginRight = '';
        this.rufMarginBottom = '';
        this.rufMarginLeft = '';
        this.margin = true;
    }
    ngOnChanges(changes) {
        Object.keys(changes).forEach(key => {
            this.update(key, changes[key]);
        });
    }
    update(key, change) {
        const previous = this._validateValue(change.previousValue);
        const current = this._validateValue(change.currentValue);
        const positions = this._positions[key];
        positions.forEach(pos => {
            // remove
            this.renderer.removeClass(this.el.nativeElement, this.classPrefix + pos + previous);
            // add
            this.renderer.addClass(this.el.nativeElement, this.classPrefix + pos + current);
        });
    }
    _validateValue(val) {
        if (RUF_MARGIN_VALUES.indexOf(val) !== -1) {
            return val;
        }
        return 'medium';
    }
};
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", Object)
], RufMarginDirective.prototype, "rufMargin", void 0);
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", Object)
], RufMarginDirective.prototype, "rufMarginVertical", void 0);
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", Object)
], RufMarginDirective.prototype, "rufMarginHorizontal", void 0);
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", Object)
], RufMarginDirective.prototype, "rufMarginTop", void 0);
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", Object)
], RufMarginDirective.prototype, "rufMarginRight", void 0);
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", Object)
], RufMarginDirective.prototype, "rufMarginBottom", void 0);
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", Object)
], RufMarginDirective.prototype, "rufMarginLeft", void 0);
tslib_1.__decorate([
    HostBinding('class.ruf-margin'),
    tslib_1.__metadata("design:type", Object)
], RufMarginDirective.prototype, "margin", void 0);
RufMarginDirective = tslib_1.__decorate([
    Directive({
        selector: `
    [rufMargin],
    [rufMarginVertical],
    [rufMarginHorizontal],
    [rufMarginTop],
    [rufMarginRight],
    [rufMarginBottom],
    [rufMarginLeft]
  `,
        exportAs: 'rufMargin'
    }),
    tslib_1.__metadata("design:paramtypes", [ElementRef, Renderer2])
], RufMarginDirective);
export { RufMarginDirective };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFyZ2luLmRpcmVjdGl2ZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BydWYvc2hlbGwvIiwic291cmNlcyI6WyJzcmMvbGF5b3V0L21hcmdpbi5kaXJlY3RpdmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsV0FBVyxFQUFFLEtBQUssRUFBNEIsU0FBUyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUUvRyxNQUFNLENBQUMsTUFBTSxpQkFBaUIsR0FBRyxDQUFDLE1BQU0sRUFBRSxNQUFNLEVBQUUsT0FBTyxFQUFFLFFBQVEsRUFBRSxPQUFPLENBQUMsQ0FBQztBQWM5RSxJQUFhLGtCQUFrQixHQUEvQixNQUFhLGtCQUFrQjtJQXVCN0IsWUFBb0IsRUFBYyxFQUFVLFFBQW1CO1FBQTNDLE9BQUUsR0FBRixFQUFFLENBQVk7UUFBVSxhQUFRLEdBQVIsUUFBUSxDQUFXO1FBdEJ2RCxnQkFBVyxHQUFHLFlBQVksQ0FBQztRQUUzQixlQUFVLEdBQUc7WUFDbkIsU0FBUyxFQUFFLENBQUMsR0FBRyxDQUFDO1lBQ2hCLGlCQUFpQixFQUFFLENBQUMsT0FBTyxFQUFFLFVBQVUsQ0FBQztZQUN4QyxtQkFBbUIsRUFBRSxDQUFDLFFBQVEsRUFBRSxTQUFTLENBQUM7WUFDMUMsWUFBWSxFQUFFLENBQUMsT0FBTyxDQUFDO1lBQ3ZCLGNBQWMsRUFBRSxDQUFDLFNBQVMsQ0FBQztZQUMzQixlQUFlLEVBQUUsQ0FBQyxVQUFVLENBQUM7WUFDN0IsYUFBYSxFQUFFLENBQUMsUUFBUSxDQUFDO1NBQzFCLENBQUM7UUFFTyxjQUFTLEdBQUcsRUFBRSxDQUFDO1FBQ2Ysc0JBQWlCLEdBQUcsRUFBRSxDQUFDO1FBQ3ZCLHdCQUFtQixHQUFHLEVBQUUsQ0FBQztRQUN6QixpQkFBWSxHQUFHLEVBQUUsQ0FBQztRQUNsQixtQkFBYyxHQUFHLEVBQUUsQ0FBQztRQUNwQixvQkFBZSxHQUFHLEVBQUUsQ0FBQztRQUNyQixrQkFBYSxHQUFHLEVBQUUsQ0FBQztRQUVLLFdBQU0sR0FBRyxJQUFJLENBQUM7SUFFbUIsQ0FBQztJQUVuRSxXQUFXLENBQUMsT0FBc0I7UUFDaEMsTUFBTSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDLEVBQUU7WUFDakMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxHQUFHLEVBQUUsT0FBTyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUM7UUFDakMsQ0FBQyxDQUFDLENBQUM7SUFDTCxDQUFDO0lBRU8sTUFBTSxDQUFDLEdBQUcsRUFBRSxNQUFNO1FBQ3hCLE1BQU0sUUFBUSxHQUFHLElBQUksQ0FBQyxjQUFjLENBQUMsTUFBTSxDQUFDLGFBQWEsQ0FBQyxDQUFDO1FBQzNELE1BQU0sT0FBTyxHQUFHLElBQUksQ0FBQyxjQUFjLENBQUMsTUFBTSxDQUFDLFlBQVksQ0FBQyxDQUFDO1FBQ3pELE1BQU0sU0FBUyxHQUFHLElBQUksQ0FBQyxVQUFVLENBQUMsR0FBRyxDQUFDLENBQUM7UUFFdkMsU0FBUyxDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUMsRUFBRTtZQUN0QixTQUFTO1lBQ1QsSUFBSSxDQUFDLFFBQVEsQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxhQUFhLEVBQUUsSUFBSSxDQUFDLFdBQVcsR0FBRyxHQUFHLEdBQUcsUUFBUSxDQUFDLENBQUM7WUFDcEYsTUFBTTtZQUNOLElBQUksQ0FBQyxRQUFRLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsYUFBYSxFQUFFLElBQUksQ0FBQyxXQUFXLEdBQUcsR0FBRyxHQUFHLE9BQU8sQ0FBQyxDQUFDO1FBQ2xGLENBQUMsQ0FBQyxDQUFDO0lBQ0wsQ0FBQztJQUVPLGNBQWMsQ0FBQyxHQUFHO1FBQ3hCLElBQUksaUJBQWlCLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsQ0FBQyxFQUFFO1lBQ3pDLE9BQU8sR0FBRyxDQUFDO1NBQ1o7UUFDRCxPQUFPLFFBQVEsQ0FBQztJQUNsQixDQUFDO0NBQ0YsQ0FBQTtBQXJDVTtJQUFSLEtBQUssRUFBRTs7cURBQWdCO0FBQ2Y7SUFBUixLQUFLLEVBQUU7OzZEQUF3QjtBQUN2QjtJQUFSLEtBQUssRUFBRTs7K0RBQTBCO0FBQ3pCO0lBQVIsS0FBSyxFQUFFOzt3REFBbUI7QUFDbEI7SUFBUixLQUFLLEVBQUU7OzBEQUFxQjtBQUNwQjtJQUFSLEtBQUssRUFBRTs7MkRBQXNCO0FBQ3JCO0lBQVIsS0FBSyxFQUFFOzt5REFBb0I7QUFFSztJQUFoQyxXQUFXLENBQUMsa0JBQWtCLENBQUM7O2tEQUFlO0FBckJwQyxrQkFBa0I7SUFaOUIsU0FBUyxDQUFDO1FBQ1QsUUFBUSxFQUFFOzs7Ozs7OztHQVFUO1FBQ0QsUUFBUSxFQUFFLFdBQVc7S0FDdEIsQ0FBQzs2Q0F3QndCLFVBQVUsRUFBb0IsU0FBUztHQXZCcEQsa0JBQWtCLENBa0Q5QjtTQWxEWSxrQkFBa0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBEaXJlY3RpdmUsIEhvc3RCaW5kaW5nLCBJbnB1dCwgT25DaGFuZ2VzLCBTaW1wbGVDaGFuZ2VzLCBSZW5kZXJlcjIsIEVsZW1lbnRSZWYgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuZXhwb3J0IGNvbnN0IFJVRl9NQVJHSU5fVkFMVUVTID0gWydub25lJywgJ2F1dG8nLCAnc21hbGwnLCAnbWVkaXVtJywgJ2xhcmdlJ107XG5cbkBEaXJlY3RpdmUoe1xuICBzZWxlY3RvcjogYFxuICAgIFtydWZNYXJnaW5dLFxuICAgIFtydWZNYXJnaW5WZXJ0aWNhbF0sXG4gICAgW3J1Zk1hcmdpbkhvcml6b250YWxdLFxuICAgIFtydWZNYXJnaW5Ub3BdLFxuICAgIFtydWZNYXJnaW5SaWdodF0sXG4gICAgW3J1Zk1hcmdpbkJvdHRvbV0sXG4gICAgW3J1Zk1hcmdpbkxlZnRdXG4gIGAsXG4gIGV4cG9ydEFzOiAncnVmTWFyZ2luJ1xufSlcbmV4cG9ydCBjbGFzcyBSdWZNYXJnaW5EaXJlY3RpdmUgaW1wbGVtZW50cyBPbkNoYW5nZXMge1xuICBwcml2YXRlIGNsYXNzUHJlZml4ID0gJ3J1Zi1tYXJnaW4nO1xuXG4gIHByaXZhdGUgX3Bvc2l0aW9ucyA9IHtcbiAgICBydWZNYXJnaW46IFsnLSddLFxuICAgIHJ1Zk1hcmdpblZlcnRpY2FsOiBbJy10b3AtJywgJy1ib3R0b20tJ10sXG4gICAgcnVmTWFyZ2luSG9yaXpvbnRhbDogWyctbGVmdC0nLCAnLXJpZ2h0LSddLFxuICAgIHJ1Zk1hcmdpblRvcDogWyctdG9wLSddLFxuICAgIHJ1Zk1hcmdpblJpZ2h0OiBbJy1yaWdodC0nXSxcbiAgICBydWZNYXJnaW5Cb3R0b206IFsnLWJvdHRvbS0nXSxcbiAgICBydWZNYXJnaW5MZWZ0OiBbJy1sZWZ0LSddXG4gIH07XG5cbiAgQElucHV0KCkgcnVmTWFyZ2luID0gJyc7XG4gIEBJbnB1dCgpIHJ1Zk1hcmdpblZlcnRpY2FsID0gJyc7XG4gIEBJbnB1dCgpIHJ1Zk1hcmdpbkhvcml6b250YWwgPSAnJztcbiAgQElucHV0KCkgcnVmTWFyZ2luVG9wID0gJyc7XG4gIEBJbnB1dCgpIHJ1Zk1hcmdpblJpZ2h0ID0gJyc7XG4gIEBJbnB1dCgpIHJ1Zk1hcmdpbkJvdHRvbSA9ICcnO1xuICBASW5wdXQoKSBydWZNYXJnaW5MZWZ0ID0gJyc7XG5cbiAgQEhvc3RCaW5kaW5nKCdjbGFzcy5ydWYtbWFyZ2luJykgbWFyZ2luID0gdHJ1ZTtcblxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIGVsOiBFbGVtZW50UmVmLCBwcml2YXRlIHJlbmRlcmVyOiBSZW5kZXJlcjIpIHt9XG5cbiAgbmdPbkNoYW5nZXMoY2hhbmdlczogU2ltcGxlQ2hhbmdlcykge1xuICAgIE9iamVjdC5rZXlzKGNoYW5nZXMpLmZvckVhY2goa2V5ID0+IHtcbiAgICAgIHRoaXMudXBkYXRlKGtleSwgY2hhbmdlc1trZXldKTtcbiAgICB9KTtcbiAgfVxuXG4gIHByaXZhdGUgdXBkYXRlKGtleSwgY2hhbmdlKSB7XG4gICAgY29uc3QgcHJldmlvdXMgPSB0aGlzLl92YWxpZGF0ZVZhbHVlKGNoYW5nZS5wcmV2aW91c1ZhbHVlKTtcbiAgICBjb25zdCBjdXJyZW50ID0gdGhpcy5fdmFsaWRhdGVWYWx1ZShjaGFuZ2UuY3VycmVudFZhbHVlKTtcbiAgICBjb25zdCBwb3NpdGlvbnMgPSB0aGlzLl9wb3NpdGlvbnNba2V5XTtcblxuICAgIHBvc2l0aW9ucy5mb3JFYWNoKHBvcyA9PiB7XG4gICAgICAvLyByZW1vdmVcbiAgICAgIHRoaXMucmVuZGVyZXIucmVtb3ZlQ2xhc3ModGhpcy5lbC5uYXRpdmVFbGVtZW50LCB0aGlzLmNsYXNzUHJlZml4ICsgcG9zICsgcHJldmlvdXMpO1xuICAgICAgLy8gYWRkXG4gICAgICB0aGlzLnJlbmRlcmVyLmFkZENsYXNzKHRoaXMuZWwubmF0aXZlRWxlbWVudCwgdGhpcy5jbGFzc1ByZWZpeCArIHBvcyArIGN1cnJlbnQpO1xuICAgIH0pO1xuICB9XG5cbiAgcHJpdmF0ZSBfdmFsaWRhdGVWYWx1ZSh2YWwpIHtcbiAgICBpZiAoUlVGX01BUkdJTl9WQUxVRVMuaW5kZXhPZih2YWwpICE9PSAtMSkge1xuICAgICAgcmV0dXJuIHZhbDtcbiAgICB9XG4gICAgcmV0dXJuICdtZWRpdW0nO1xuICB9XG59XG4iXX0=