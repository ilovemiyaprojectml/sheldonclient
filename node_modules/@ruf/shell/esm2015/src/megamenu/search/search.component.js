import * as tslib_1 from "tslib";
import { ChangeDetectorRef, ChangeDetectionStrategy, Component, ElementRef, EventEmitter, Input, Output, ViewChild, ViewEncapsulation } from '@angular/core';
import { RufShellIntl } from '../../utils/shell-intl';
import { RufKeyCodes } from './../../input/keyboard';
let RufMegamenuSearchComponent = class RufMegamenuSearchComponent {
    constructor(_intl, changeDetectorRef) {
        this._intl = _intl;
        this.filterValue = new EventEmitter();
        this.inputFocus = new EventEmitter();
        this._intlChanges = _intl.changes.subscribe(() => changeDetectorRef.markForCheck());
    }
    get placeholder() {
        return this._placeholder || this._intl.megamenusearch.placeholder;
    }
    set placeholder(value) {
        this._placeholder = value;
    }
    get clearSearchLabel() {
        return this._clearSearchLabel || this._intl.megamenusearch.aria.clearSearchLabel;
    }
    set clearSearchLabel(value) {
        this._clearSearchLabel = value;
    }
    clear($event) {
        this.filter.nativeElement.value = '';
        this.filterValue.emit('');
        $event.preventDefault();
        $event.stopPropagation();
    }
    handleKeyDown($event) {
        switch ($event.keyCode) {
            case RufKeyCodes.SPACE:
            case RufKeyCodes.ENTER:
                this.clear($event);
                break;
        }
    }
    ngOnDestroy() {
        this._intlChanges.unsubscribe();
    }
};
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", String),
    tslib_1.__metadata("design:paramtypes", [String])
], RufMegamenuSearchComponent.prototype, "placeholder", null);
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", String),
    tslib_1.__metadata("design:paramtypes", [String])
], RufMegamenuSearchComponent.prototype, "clearSearchLabel", null);
tslib_1.__decorate([
    Output(),
    tslib_1.__metadata("design:type", Object)
], RufMegamenuSearchComponent.prototype, "filterValue", void 0);
tslib_1.__decorate([
    Output(),
    tslib_1.__metadata("design:type", Object)
], RufMegamenuSearchComponent.prototype, "inputFocus", void 0);
tslib_1.__decorate([
    ViewChild('filter', { static: false }),
    tslib_1.__metadata("design:type", ElementRef)
], RufMegamenuSearchComponent.prototype, "filter", void 0);
RufMegamenuSearchComponent = tslib_1.__decorate([
    Component({
        selector: 'ruf-megamenu-search',
        template: "<div class=\"fis-search-input-container\" [class.ruf-focus]='inputFocusClass'>\n  <div class=\"fis-icon-search\"></div>\n  <input type=\"text\" #filter (focus)=\"inputFocus.emit(filter.value);inputFocusClass = true\" (keyup.enter)=\"filterValue.emit(filter.value)\"\n         (blur)=\"inputFocusClass = false;\"\n         (input)=\"filterValue.emit(filter.value)\" [placeholder]=\"placeholder\"\n         [attr.aria-label]=\"placeholder\">\n  <i class=\"fis-icon-close\" (click)=\"clear($event);inputFocusClass = true;filter.focus();\"\n       (keydown)=\"handleKeyDown($event)\"\n       (blur)=\"inputFocusClass = false;\"\n       [title]=\"clearSearchLabel\"\n       role=\"button\" [attr.aria-label]=\"clearSearchLabel\" tabindex=\"0\"></i>\n</div>\n",
        encapsulation: ViewEncapsulation.None,
        changeDetection: ChangeDetectionStrategy.OnPush,
        styles: ["ruf-megamenu-search{padding-right:0}ruf-megamenu-search input{background-color:transparent;border:0 solid;content:'\\E93E';height:40px;outline:0;width:100%}ruf-megamenu-search input[type=text]::-ms-clear{display:none}ruf-megamenu-search .fis-icon-search{font-size:22px;margin-left:5px;margin-top:10px}ruf-megamenu-search .fis-icon-close{-ms-grid-row-align:center;align-self:center;height:1em;margin-right:5px;position:relative}ruf-megamenu-search .fis-search-input-container{display:-webkit-box;display:flex}"]
    }),
    tslib_1.__metadata("design:paramtypes", [RufShellIntl, ChangeDetectorRef])
], RufMegamenuSearchComponent);
export { RufMegamenuSearchComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2VhcmNoLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BydWYvc2hlbGwvIiwic291cmNlcyI6WyJzcmMvbWVnYW1lbnUvc2VhcmNoL3NlYXJjaC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFDTCxpQkFBaUIsRUFDakIsdUJBQXVCLEVBQ3ZCLFNBQVMsRUFDVCxVQUFVLEVBQ1YsWUFBWSxFQUNaLEtBQUssRUFDTCxNQUFNLEVBRU4sU0FBUyxFQUNULGlCQUFpQixFQUNsQixNQUFNLGVBQWUsQ0FBQztBQUV2QixPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sd0JBQXdCLENBQUM7QUFDdEQsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLHdCQUF3QixDQUFDO0FBU3JELElBQWEsMEJBQTBCLEdBQXZDLE1BQWEsMEJBQTBCO0lBMkJyQyxZQUFvQixLQUFtQixFQUFFLGlCQUFvQztRQUF6RCxVQUFLLEdBQUwsS0FBSyxDQUFjO1FBUDdCLGdCQUFXLEdBQUcsSUFBSSxZQUFZLEVBQVUsQ0FBQztRQUN6QyxlQUFVLEdBQUcsSUFBSSxZQUFZLEVBQVUsQ0FBQztRQU9oRCxJQUFJLENBQUMsWUFBWSxHQUFHLEtBQUssQ0FBQyxPQUFPLENBQUMsU0FBUyxDQUFDLEdBQUcsRUFBRSxDQUFDLGlCQUFpQixDQUFDLFlBQVksRUFBRSxDQUFDLENBQUM7SUFDdEYsQ0FBQztJQXhCRCxJQUFJLFdBQVc7UUFDYixPQUFPLElBQUksQ0FBQyxZQUFZLElBQUksSUFBSSxDQUFDLEtBQUssQ0FBQyxjQUFjLENBQUMsV0FBVyxDQUFDO0lBQ3BFLENBQUM7SUFDRCxJQUFJLFdBQVcsQ0FBQyxLQUFhO1FBQzNCLElBQUksQ0FBQyxZQUFZLEdBQUcsS0FBSyxDQUFDO0lBQzVCLENBQUM7SUFHRCxJQUFJLGdCQUFnQjtRQUNsQixPQUFPLElBQUksQ0FBQyxpQkFBaUIsSUFBSSxJQUFJLENBQUMsS0FBSyxDQUFDLGNBQWMsQ0FBQyxJQUFJLENBQUMsZ0JBQWdCLENBQUM7SUFDbkYsQ0FBQztJQUNELElBQUksZ0JBQWdCLENBQUMsS0FBYTtRQUNoQyxJQUFJLENBQUMsaUJBQWlCLEdBQUcsS0FBSyxDQUFDO0lBQ2pDLENBQUM7SUFhRCxLQUFLLENBQUMsTUFBTTtRQUNWLElBQUksQ0FBQyxNQUFNLENBQUMsYUFBYSxDQUFDLEtBQUssR0FBRyxFQUFFLENBQUM7UUFDckMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLENBQUM7UUFDMUIsTUFBTSxDQUFDLGNBQWMsRUFBRSxDQUFDO1FBQ3hCLE1BQU0sQ0FBQyxlQUFlLEVBQUUsQ0FBQztJQUMzQixDQUFDO0lBRUQsYUFBYSxDQUFDLE1BQU07UUFDbEIsUUFBUSxNQUFNLENBQUMsT0FBTyxFQUFFO1lBQ3RCLEtBQUssV0FBVyxDQUFDLEtBQUssQ0FBQztZQUN2QixLQUFLLFdBQVcsQ0FBQyxLQUFLO2dCQUNwQixJQUFJLENBQUMsS0FBSyxDQUFDLE1BQU0sQ0FBQyxDQUFDO2dCQUNuQixNQUFNO1NBQ1Q7SUFDSCxDQUFDO0lBRUQsV0FBVztRQUNULElBQUksQ0FBQyxZQUFZLENBQUMsV0FBVyxFQUFFLENBQUM7SUFDbEMsQ0FBQztDQUNGLENBQUE7QUE3Q0M7SUFEQyxLQUFLLEVBQUU7Ozs2REFHUDtBQU1EO0lBREMsS0FBSyxFQUFFOzs7a0VBR1A7QUFLUztJQUFULE1BQU0sRUFBRTs7K0RBQTBDO0FBQ3pDO0lBQVQsTUFBTSxFQUFFOzs4REFBeUM7QUFFWjtJQUFyQyxTQUFTLENBQUMsUUFBUSxFQUFFLEVBQUMsTUFBTSxFQUFFLEtBQUssRUFBQyxDQUFDO3NDQUFTLFVBQVU7MERBQUM7QUF2QjlDLDBCQUEwQjtJQVB0QyxTQUFTLENBQUM7UUFDVCxRQUFRLEVBQUUscUJBQXFCO1FBQy9CLDZ2QkFBc0M7UUFFdEMsYUFBYSxFQUFFLGlCQUFpQixDQUFDLElBQUk7UUFDckMsZUFBZSxFQUFFLHVCQUF1QixDQUFDLE1BQU07O0tBQ2hELENBQUM7NkNBNEIyQixZQUFZLEVBQXFCLGlCQUFpQjtHQTNCbEUsMEJBQTBCLENBa0R0QztTQWxEWSwwQkFBMEIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBDaGFuZ2VEZXRlY3RvclJlZixcbiAgQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksXG4gIENvbXBvbmVudCxcbiAgRWxlbWVudFJlZixcbiAgRXZlbnRFbWl0dGVyLFxuICBJbnB1dCxcbiAgT3V0cHV0LFxuICBPbkRlc3Ryb3ksXG4gIFZpZXdDaGlsZCxcbiAgVmlld0VuY2Fwc3VsYXRpb25cbn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBTdWJzY3JpcHRpb24gfSBmcm9tICdyeGpzJztcbmltcG9ydCB7IFJ1ZlNoZWxsSW50bCB9IGZyb20gJy4uLy4uL3V0aWxzL3NoZWxsLWludGwnO1xuaW1wb3J0IHsgUnVmS2V5Q29kZXMgfSBmcm9tICcuLy4uLy4uL2lucHV0L2tleWJvYXJkJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAncnVmLW1lZ2FtZW51LXNlYXJjaCcsXG4gIHRlbXBsYXRlVXJsOiAnLi9zZWFyY2guY29tcG9uZW50Lmh0bWwnLFxuICBzdHlsZVVybHM6IFsnLi9zZWFyY2guY29tcG9uZW50LnNjc3MnXSxcbiAgZW5jYXBzdWxhdGlvbjogVmlld0VuY2Fwc3VsYXRpb24uTm9uZSxcbiAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2hcbn0pXG5leHBvcnQgY2xhc3MgUnVmTWVnYW1lbnVTZWFyY2hDb21wb25lbnQgaW1wbGVtZW50cyBPbkRlc3Ryb3kge1xuICBwcml2YXRlIF9pbnRsQ2hhbmdlczogU3Vic2NyaXB0aW9uO1xuICBwcml2YXRlIF9wbGFjZWhvbGRlcjogc3RyaW5nO1xuICBwcml2YXRlIF9jbGVhclNlYXJjaExhYmVsOiBzdHJpbmc7XG4gIEBJbnB1dCgpXG4gIGdldCBwbGFjZWhvbGRlcigpIHtcbiAgICByZXR1cm4gdGhpcy5fcGxhY2Vob2xkZXIgfHwgdGhpcy5faW50bC5tZWdhbWVudXNlYXJjaC5wbGFjZWhvbGRlcjtcbiAgfVxuICBzZXQgcGxhY2Vob2xkZXIodmFsdWU6IHN0cmluZykge1xuICAgIHRoaXMuX3BsYWNlaG9sZGVyID0gdmFsdWU7XG4gIH1cblxuICBASW5wdXQoKVxuICBnZXQgY2xlYXJTZWFyY2hMYWJlbCgpIHtcbiAgICByZXR1cm4gdGhpcy5fY2xlYXJTZWFyY2hMYWJlbCB8fCB0aGlzLl9pbnRsLm1lZ2FtZW51c2VhcmNoLmFyaWEuY2xlYXJTZWFyY2hMYWJlbDtcbiAgfVxuICBzZXQgY2xlYXJTZWFyY2hMYWJlbCh2YWx1ZTogc3RyaW5nKSB7XG4gICAgdGhpcy5fY2xlYXJTZWFyY2hMYWJlbCA9IHZhbHVlO1xuICB9XG5cbiAgQE91dHB1dCgpIGZpbHRlclZhbHVlID0gbmV3IEV2ZW50RW1pdHRlcjxzdHJpbmc+KCk7XG4gIEBPdXRwdXQoKSBpbnB1dEZvY3VzID0gbmV3IEV2ZW50RW1pdHRlcjxzdHJpbmc+KCk7XG5cbiAgQFZpZXdDaGlsZCgnZmlsdGVyJywge3N0YXRpYzogZmFsc2V9KSBmaWx0ZXI6IEVsZW1lbnRSZWY7XG5cbiAgaW5wdXRGb2N1c0NsYXNzOiBib29sZWFuO1xuXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgX2ludGw6IFJ1ZlNoZWxsSW50bCwgY2hhbmdlRGV0ZWN0b3JSZWY6IENoYW5nZURldGVjdG9yUmVmKSB7XG4gICAgdGhpcy5faW50bENoYW5nZXMgPSBfaW50bC5jaGFuZ2VzLnN1YnNjcmliZSgoKSA9PiBjaGFuZ2VEZXRlY3RvclJlZi5tYXJrRm9yQ2hlY2soKSk7XG4gIH1cblxuICBjbGVhcigkZXZlbnQpIHtcbiAgICB0aGlzLmZpbHRlci5uYXRpdmVFbGVtZW50LnZhbHVlID0gJyc7XG4gICAgdGhpcy5maWx0ZXJWYWx1ZS5lbWl0KCcnKTtcbiAgICAkZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICAkZXZlbnQuc3RvcFByb3BhZ2F0aW9uKCk7XG4gIH1cblxuICBoYW5kbGVLZXlEb3duKCRldmVudCkge1xuICAgIHN3aXRjaCAoJGV2ZW50LmtleUNvZGUpIHtcbiAgICAgIGNhc2UgUnVmS2V5Q29kZXMuU1BBQ0U6XG4gICAgICBjYXNlIFJ1ZktleUNvZGVzLkVOVEVSOlxuICAgICAgICB0aGlzLmNsZWFyKCRldmVudCk7XG4gICAgICAgIGJyZWFrO1xuICAgIH1cbiAgfVxuXG4gIG5nT25EZXN0cm95KCkge1xuICAgIHRoaXMuX2ludGxDaGFuZ2VzLnVuc3Vic2NyaWJlKCk7XG4gIH1cbn1cbiJdfQ==