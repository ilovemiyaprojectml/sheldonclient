import { EventEmitter, ElementRef, AfterViewInit, QueryList } from '@angular/core';
import { Observable } from 'rxjs';
import { RufFocusableDirective } from '../utils/focusable';
import { RufBaseItem } from '../common/base-item';
export interface RufSitemapItem extends RufBaseItem {
    children: RufSitemapItem[];
    context?: string;
}
export declare class RufSitemapComponent implements AfterViewInit {
    protected _elementRef: ElementRef;
    role: string;
    items: Observable<RufSitemapItem[]>;
    select: EventEmitter<RufSitemapItem>;
    direction: string;
    sitemapItems: QueryList<RufFocusableDirective>;
    private _keyboardNav;
    constructor(_elementRef: ElementRef);
    ngAfterViewInit(): void;
    addNewKeyboardNav(): void;
    selectItem(sitemapItem: RufSitemapItem): void;
    onKey(event: KeyboardEvent, item: RufSitemapItem): void;
    uniqueItem(index: any, item: any): any;
}
