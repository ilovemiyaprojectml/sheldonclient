import { EventEmitter, ElementRef, Renderer2, AfterViewInit, AfterContentInit, QueryList } from '@angular/core';
import { RufMenubarItem, RufMenubarItemComponent } from './menubar-item.component';
import { Observable } from 'rxjs';
import { RufMixinBase, RufCanColor } from '../common/color/color';
export declare class RufMenubarComponent extends RufMixinBase implements AfterViewInit, AfterContentInit, RufCanColor {
    _elementRef: ElementRef;
    protected _renderer: Renderer2;
    private _selectedPath;
    private _selectedPathSubject;
    private _selectedPath$;
    private _activatedPathSubject;
    private _activatedPath$;
    private _inkbarPosition;
    private autoActivate;
    private _keyboardNav;
    color: any;
    direction: string;
    directionXs: any;
    directionSm: any;
    directionMd: any;
    directionLg: any;
    directionXl: any;
    directionGtXs: any;
    directionGtSm: any;
    directionGtMd: any;
    directionGtLg: any;
    directionLtSm: any;
    directionLtMd: any;
    directionLtLg: any;
    directionLtXl: any;
    selectEmitter: EventEmitter<RufMenubarItem>;
    menuItems: QueryList<RufMenubarItemComponent>;
    constructor(_elementRef: ElementRef, _renderer: Renderer2);
    ngAfterViewInit(): void;
    ngAfterContentInit(): void;
    addNewKeyboardNav(): void;
    setActiveItem(path: string): void;
    firstChild(): RufMenubarItemComponent;
    addTabIndex(): void;
    selectedIndex(path: string): number;
    select(path?: string, data?: any, event?: any): void;
    activate(path: string): void;
    selectedPath: string;
    readonly selectedPath$: Observable<string>;
    readonly activatedPath$: Observable<string>;
    inkbarPosition: string;
    getLayoutClass(): {
        'ruf-menubar-layout': boolean;
        'ruf-layout-row': boolean;
        'ruf-layout-column': boolean;
        'ruf-layout-row-xs': boolean;
        'ruf-layout-column-xs': boolean;
        'ruf-layout-row-sm': boolean;
        'ruf-layout-column-sm': boolean;
        'ruf-layout-row-md': boolean;
        'ruf-layout-column-md': boolean;
        'ruf-layout-row-lg': boolean;
        'ruf-layout-column-lg': boolean;
        'ruf-layout-row-xl': boolean;
        'ruf-layout-column-xl': boolean;
        'ruf-layout-row-gt-xs': boolean;
        'ruf-layout-column-gt-xs': boolean;
        'ruf-layout-row-gt-sm': boolean;
        'ruf-layout-column-gt-sm': boolean;
        'ruf-layout-row-gt-md': boolean;
        'ruf-layout-column-gt-md': boolean;
        'ruf-layout-row-gt-lg': boolean;
        'ruf-layout-column-gt-lg': boolean;
        'ruf-layout-row-lt-sm': boolean;
        'ruf-layout-column-lt-sm': boolean;
        'ruf-layout-row-lt-md': boolean;
        'ruf-layout-column-lt-md': boolean;
        'ruf-layout-row-lt-lg': boolean;
        'ruf-layout-column-lt-lg': boolean;
        'ruf-layout-row-lt-xl': boolean;
        'ruf-layout-column-lt-xl': boolean;
    };
    private _updateInkbarPosition;
    onKey(event: KeyboardEvent): void;
}
