import { RufSidemenuComponent } from './../sidemenu/sidemenu.component';
import { RufSearchService } from './menu-search.service';
import { RufSearchItem } from './search/searchitem.interface';
import { ChangeDetectorRef, EventEmitter, OnInit, OnDestroy, AfterViewInit, OnChanges, SimpleChanges } from '@angular/core';
import { Observable, Subject } from 'rxjs';
import { RufShellIntl } from '../utils/shell-intl';
export declare class RufMegamenuComponent implements AfterViewInit, OnInit, OnChanges, OnDestroy {
    private searchService;
    private _intl;
    private _intlChanges;
    private _searchPlaceholder;
    private _clearSearchAriaLabel;
    searchPlaceholder: string;
    clearSearchAriaLabel: string;
    items: RufSearchItem[];
    select: EventEmitter<RufSearchItem>;
    sidemenu: RufSidemenuComponent;
    searchTerms$: Subject<string>;
    selectedSidemenuItems$: Subject<any>;
    sitemapItems$: Observable<RufSearchItem[]>;
    private preparedSearchableItems;
    constructor(searchService: RufSearchService, _intl: RufShellIntl, changeDetectorRef: ChangeDetectorRef);
    ngOnInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    ngAfterViewInit(): void;
    private search;
    ngOnDestroy(): void;
}
