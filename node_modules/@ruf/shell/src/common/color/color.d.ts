/**
 * @license
 * The MIT License

 * Copyright (c) 2010-2019 Google LLC. http://angular.io/license

 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation
 * files (the "Software"), * to deal in the Software without restriction, including without limitation the rights to use, copy,
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software
 * is furnished to do so, subject to the following conditions:

 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR
 * ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
 * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */
import { ElementRef } from '@angular/core';
import { ThemePalette } from '@angular/material/core';
export declare type Constructor<T> = new (...args: any[]) => T;
export interface RufCanColor {
    color: RufThemePalette;
}
export interface HasElementRef {
    _elementRef: ElementRef;
}
export declare type RufThemePalette = ThemePalette & 'emphasis' | 'info' | 'success' | 'error';
export declare type RufCanColorCtor = Constructor<RufCanColor>;
export declare function rufMixinColor<T extends Constructor<HasElementRef>>(base: T, defaultColor?: RufThemePalette): RufCanColorCtor & T;
export declare class RufElementRefBase {
    _elementRef: ElementRef;
    constructor(_elementRef: ElementRef);
}
export declare const RufMixinBase: RufCanColorCtor & typeof RufElementRefBase;
