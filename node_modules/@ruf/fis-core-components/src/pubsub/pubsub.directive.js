/**
 * @name fisPubSub
 * @description event handling service for the framework
 *
 */
 export default function () {
   return {
     restrict: 'A',
     controller: ['$scope', 'fisPubSubService', function ($scope, fisPubSubService) {
       var unsubs = [];
       $scope.subscribe = function (topic, cb) {
         var unsubscribe = fisPubSubService.subscribe(topic, cb);
         unsubs.push(unsubscribe);
         return unsubscribe;
       };

       $scope.publish = function (topic, payload) {
         if (typeof payload === 'object') {
           payload.$scope = $scope;
         }

         if ($scope.$root.$$phase === '$apply' || $scope.$root.$$phase === '$digest') {
           return fisPubSubService.publish(topic, payload);
         }

         $scope.$apply(function () {
           return fisPubSubService.publish(topic, payload);
         });
       };

       // unsubscribe events when scope is destroyed
       $scope.$on('$destroy', function () {
         while (unsubs.length > 0) {
           unsubs.pop()(); // pop the unsubscribe function and invoke it.
         }
       });
     }]
   };
 }
