/**
 * @name i18n
 * @description This filter replaces the string with its internationalized value.
 * You can also provide default value to the filter in case the key is not found in the filter.
 * If no default value is provided and the key in not found in the bundle, the key will be printed as is.
 * Example:
 * {{'myApp.key1.value1' | i18n:'Default Value'}} => internationalized value of myApp.key1.value1 or 'Default Value'
 * {{'myApp.key1.value2' | i18n}} => internationalized value of myApp.key2.value2 or 'myApp.key2.value2'
 * @param {String} key The key in resource bundle which needs to be internationalized
 * @param String defaultValue The value to be displayed if key is not found in resource bundle
 * @methodOf fis.core.filters
 */
export default function (fisI18nService, fisViewPanelService) {
  'ngInject';
  return function (key, DefalutValue) {
    if (angular.isDefined(key)) {
      if (key.indexOf('.') === -1) {
        var view = fisViewPanelService.activeViewPanel();
        if (view) {
          key = [view.module, view.id, key];
        }
      }
      return fisI18nService.translate(key, DefalutValue);
    }
  };
}
