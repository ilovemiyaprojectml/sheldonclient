export default function () {
  var self = this;

  var warningPrinted = false;
  function dummy() {
    if (!warningPrinted) {
      warningPrinted = true;
      console.warn('You are using dummy angular-translate APIs. Please load and use angular-translate in your application or add a dependency on fis.i18n module');
    }
  }

  self.preferredLanguage = self.use = self.translations = dummy;

  self.$get = ['$q', function ($q) {
    var lang = '';
    var $translate = function (translationId, interpolateParams, interpolationId, defaultTranslationText /* , forceLanguage*/) {
      dummy();
      var deferred = $q.defer();
      if (defaultTranslationText) {
        deferred.resolve(defaultTranslationText);
      } else {
        deferred.resolve($translate.instant(translationId));
      }
      return deferred.promise;
    };

    $translate.instant = function (translationId/* , interpolateParams, interpolationId , forceLanguage*/) {
      dummy();
      var result = '';
      if (angular.isArray(translationId) && translationId.length > 0) {
        result = {};
        translationId.forEach(function (key) {
          result[key] = key;
        });
      } else {
        result = translationId;
      }
      return result;
    };

    $translate.use = function (language) {
      lang = language;
      dummy();
    };

    $translate.proposedLanguage = function () {
      dummy();
      return lang;
    };

    return $translate;
  }];
}
