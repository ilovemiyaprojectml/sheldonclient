/**
 * @class
 * @name fisNavigationService
 * @description fisNavigationService, subscribes to and caches the navigation for frequent access
 */
export default function () {
  var self = this;

  self.$get = ['fisPubSubService', '$q', function (fisPubSubService, $q) {
    var service = {};
    var navigation;
    var deferred = $q.defer();

    /**
     * since the 'shell.navReady' is fired before this directive is instantiated,
     * this method is only used when the navigation is updated.
     * @param nav
     */
    fisPubSubService.subscribe('shell.navReady', function (nav) {
      if (angular.isDefined(nav)) {
        navigation = nav;
        deferred.resolve(navigation);
      }
    });

    /**
     * Setter for the Navigation - used to set navigaiton from the View Service.
     * @param nav
     */
    service.setNavigation = function (nav) {
      navigation = nav;
      deferred.resolve(navigation);
    };

    /**
     * Accessor for the navigation
     * @returns {*}
     */
    service.getNavigation = function () {
      return deferred.promise;
    };

    return service;
  }];
}
