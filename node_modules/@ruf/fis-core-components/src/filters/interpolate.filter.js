/**
 * @name interpolate
 * @description This filter allows replacing markers in a string with values.
 * You can give it an array of string values, a string or an object hash to map a string value to a name.</p>
 * <p>For an array or a string, the interpolation markers need to contain the index:</p>
 * <pre>'Hello {0}' | interpolate ['World'] => 'Hello World'
 * 'Hello {0} | interpolate 'Pierre' => 'Hello Pierre'</pre>
 * <p>For an object hash, the interpolation markers need to contain the hash keys:</p>
 * <pre>'Hello {firstName} {lastName} | interpolate {firstName: 'Pierre', lastName: 'Asselin'} => Hello Pierre Asselin</pre>
 * <p>You can also use this filter inside a service or a controller by injecting the $filter service:</p>
 * <pre>$filter('interpolate')('Hello {0}')</pre>
 * @param {String} text The text to interpolate the values with
 * @param {Object|String[]|String} val The value(s) to use for interpolation
 * @methodOf fis.core.filters
 */
export default function () {
  'use strict';

  return function (text, val) {
    if (text) {
      var str = String(text);

      if (typeof (val) !== 'object' && typeof (val) !== 'array') { // eslint-disable-line
        val = [val];
      }
      for (var itm in val) {
        if (itm) {
          var re = new RegExp('\\{' + itm + '\\}', 'mg');
          str = str.replace(re, val[itm]);
        }
      }
      return str;
    }

    return '';
  };
}
