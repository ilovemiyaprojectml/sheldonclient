/**
 * @name search
 * @description This filter searches a given object on for a given query and if a matched object is found, it returns the
 * value of 'property' property from that object.
 * Example:
 * {{[{value:1, label:'A'}, {value:2, label:'B'}] | search:{value:2}:'label'}} => 'B'
 * {{[{value:1, label:'A'}, {value:2, label:'B'}] | search:{value:3}:'label'}} => ''
 * {{[{value:1, label:'A'}, {value:2, label:'B'}] | search:{value:1}:'someproperty'}} => ''
 * {{[{value:1, label:'A'}, {value:2, label:'B'}] | search:{value:1}}} => {value:1, label:'A'}
 * @param {String} list The array/collection to be searched
 * @param {Object} queryObj The object that is used for querying to find a single object.
 * @param {String} property The property of the object found by querying 'list'. The value of this property will be returned.
 * @methodOf fis.core.filters
 */
export default function () {
  'use strict';
  return function (list, queryObj, property) {
    var requiredObj;
    var queryKeys = queryObj ? Object.keys(queryObj) : [];
    list.some(function (item) {
      var currentItemMatchesQueryObj = queryKeys.every(function (queryKey) {
        return queryObj[queryKey] === item[queryKey];
      });
      if (currentItemMatchesQueryObj) {
        requiredObj = item;
        return true;
      }
      return false;
    });
    if (requiredObj) {
      if (property) {
        return requiredObj[property] || '';
      }
      return requiredObj;
    }
    return '';
  };
}
