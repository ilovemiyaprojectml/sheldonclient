/* jshint multistr:true */

/**
 * @name fisUniqueId
 * @description Defining directive to make text field
 * @methodOf fis.core.directives
 *
 */
export default function (fisUniqueIdService) {
  'ngInject';
  return {
    restrict: 'A',
    link: function (scope, element, attributes) {
      var seed = attributes.fisSeed;
      if (seed === undefined) {
        seed = '';
      }
      // if test mode, then we build up seeds for unique id's based on parents that contain fis-seed attributes
      if (fis.initParams().appStage === 'T' || fis.initParams().appStage === 'D') {
        if (seed.length > 0 && seed.charAt(0) !== '_') {
          seed = '_' + seed;
        }
        var seedArr = element.parents('[fis-seed]');
        if (seedArr.length > 0) {
          for (var i = 0; i < seedArr.length; i++) {
            var elem = angular.element(seedArr[i]);
            seed = seed + '_' + elem.attr('fis-seed');
            elem = undefined;
          }
        }
      }
      if (angular.isDefined(attributes.fisIdNoIncrement) && attributes.fisIdNoIncrement) {
        fisUniqueIdService.generateIdWithStaticSeed(scope, element, attributes, undefined, undefined, attributes.fisUniqueId, seed);
      } else if (attributes.fisIdNoIncrement !== '' && attributes.fisIdNoIncrement !== null) {
        fisUniqueIdService.generateUniqueId(scope, element, attributes, attributes.fisUniqueId, undefined, seed);
      } else {
        fisUniqueIdService.generateUniqueId(scope, element, attributes, undefined, undefined, seed);
      }
    }
  };
}
