/**
 * @name fisDraggable
 * @description Directive used to add the payload of a REST call to the current scope
 * @methodOf fis.core.directives
 *
 */
export default function (fisPubSubService) {
  'ngInject';
  return {
    restrict: 'A',
    link: function (scope, element, attrs) {
      var draggable = attrs.fisDraggable === true || attrs.fisDraggable === 'true';
      element.attr('draggable', draggable);

      var dragStartEvent = 'fisOnDragStart.' + attrs.fisDragDropType;
      var dragEvent = 'fisOnDrag.' + attrs.fisDragDropType;
      var dragEndEvent = 'fisOnDragEnd.' + attrs.fisDragDropType;

      element.get(0).addEventListener('dragstart', function (e) {
        fisPubSubService.publish(dragStartEvent, { event: e });
      });

      element.get(0).addEventListener('dragover', function (e) {
        e.preventDefault();
      });

      element.get(0).addEventListener('drag', function (e) {
        fisPubSubService.publish(dragEvent, { event: e });
      });

      element.get(0).addEventListener('dragend', function (e) {
        fisPubSubService.publish(dragEndEvent, { event: e });
      });
    }
  };
}
