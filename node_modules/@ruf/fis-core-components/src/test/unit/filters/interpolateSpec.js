'use strict';

/* jasmine specs for filters go here */

describe('filter', function () {
  beforeEach(angular.mock.module('fis.core'));

  describe('interpolate', function () {
    it('should replace variable with string value provided', inject(function ($filter) {
      var interpolate = $filter('interpolate');
      expect(interpolate('Hello {0}', 'world')).toEqual('Hello world');
    }));
    it('should replace variable with value from array provided', inject(function ($filter) {
      var interpolate = $filter('interpolate');
      expect(interpolate('Hello {0}', ['world'])).toEqual('Hello world');
    }));
    it('should replace 2 variables with corresponding values from an array provided', inject(function ($filter) {
      var interpolate = $filter('interpolate');
      expect(interpolate('Hello {1}, {0}', ['how are you?', 'world'])).toEqual('Hello world, how are you?');
    }));
    it('should replace 2 variables with one corresponding value from an array provided', inject(function ($filter) {
      var interpolate = $filter('interpolate');
      expect(interpolate('Hello {0} {0}', ['world'])).toEqual('Hello world world');
    }));
    it('should replace 2 variables with corresponding values from an object provided', inject(function ($filter) {
      var interpolate = $filter('interpolate');
      expect(interpolate('Hello {firstName} {lastName}!', { firstName: 'John', lastName: 'Doe' })).toEqual('Hello John Doe!');
    }));
    it('should return empty string if null variable is provided', inject(function ($filter) {
      var interpolate = $filter('interpolate');
      expect(interpolate(null, 'world')).toEqual('');
    }));
  });
});
