describe('filter', function () {
  beforeEach(angular.mock.module('fis.core'));

  describe('uncamelcase', function () {
    it('should replace text with stars of the same length', inject(function ($filter) {
      var uncamelcase = $filter('uncamelcase');
      expect(uncamelcase('camelCaseToFull')).toEqual('Camel Case To Full');
      expect(uncamelcase('camelcasetofull')).toEqual('Camelcasetofull');
      expect(uncamelcase('camel')).toEqual('Camel');                      // All lowercase letters
      expect(uncamelcase('CAMEL')).toEqual('CAMEL');                     // All uppercase letters
      expect(uncamelcase('cameL')).toEqual('Came L');                    // Last word in capital
      expect(uncamelcase('12345')).toEqual('12345');                     // All numbers
      expect(uncamelcase('a12345')).toEqual('A12345');                   // alpha char followed by number
      expect(uncamelcase('12345a')).toEqual('12345a');                   // number followed by lowercase char
      expect(uncamelcase('12345A')).toEqual('12345A');                   // number followed by uppercase char
      expect(uncamelcase('12345AAA')).toEqual('12345AAA');               // number followed by lowercase and uppercase char
      expect(uncamelcase('a12345aA')).toEqual('A12345a A');              // number followed by uppercase and lowercase char
      expect(uncamelcase('a12345Aa')).toEqual('A12345Aa');               // alternate lowe and uppercase alpha char
      expect(uncamelcase('aAbBcCdD')).toEqual('A Ab Bc Cd D');           // alternate lowe and uppercase alpha char
      expect(uncamelcase('AaBbCcDd')).toEqual('Aa Bb Cc Dd');            // alternate lowe and uppercase alpha char
      expect(uncamelcase('1a2A3b4B5c')).toEqual('1a2A3b4B5c');           // alternate numeric and alpha char
      expect(uncamelcase('aaaaaB')).toEqual('Aaaaa B');                  // All lowercase chracters followed by uppercase char
      expect(uncamelcase('AAAAAb')).toEqual('AAAA Ab');                   // All uppercase chracters followed by lowercase char
    }));
  });
});
