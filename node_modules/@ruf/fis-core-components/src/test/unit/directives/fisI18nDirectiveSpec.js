'use strict';

describe('fis-i18n directive', function () {
  beforeEach(angular.mock.module('fis.core'));

  it('should invoke the scope.i18n function', function () {
    angular.mock.inject(function ($compile, $rootScope) {
      var scope = $rootScope.$new();
      scope.i18n = jasmine.createSpy('i18n');

      $compile('<p fis-i18n="key">Default</p>')(scope);
      expect(scope.i18n).toHaveBeenCalledWith('key', 'Default');
    });
  });

  it('should fail when no attribute value is provided', function () {
    angular.mock.inject(function ($compile, $rootScope) {
      var log;
      var scope = $rootScope.$new();

      scope.i18n = jasmine.createSpy('i18n');

      try {
        $compile('<p fis-i18n>Default</p>')(scope);
      } catch (err) {
        log = 'ok';
      }
      expect(log).toBeDefined();
    });
  });

  it('should send undefined as a parameter when no default provided', function () {
    angular.mock.inject(function ($compile, $rootScope) {
      var scope = $rootScope.$new();
      scope.i18n = jasmine.createSpy('i18n');

      $compile('<p fis-i18n="key"></p>')(scope);
      expect(scope.i18n).toHaveBeenCalledWith('key', undefined);
    });
  });
});
