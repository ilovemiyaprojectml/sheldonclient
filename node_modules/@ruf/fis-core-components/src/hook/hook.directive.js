/**
 * @name fisHook
 * @description The fisHook directive will read the config and add a directive to the DOM
 *
 */
export default function ($compile, fisConfig, $templateCache, $parse, fisTemplateCacheService) {
  'ngInject';

  return {
    restrict: 'E',
    replace: 'true',
    scope: true,
    template: '<div class="hook"></div>',
    link: function (scope, elem, attrs) {
      var setHookData = function () {
        var fisHookData = $parse(attrs.fisHookData);
        scope.fisHookData = fisHookData(scope);
      };

      if (attrs.fisHookData) {
        setHookData();
        attrs.$observe('fisHookData', function () {
          setHookData();
        });
      }

      if (attrs.id) {
        var templateName = attrs.id;
        var template = fisTemplateCacheService.getTemplate(templateName);

        if (angular.isDefined(template)) {
          if (attrs.ngController) {
            template = addController(template, attrs);
          }
          var hook = angular.element(template);
          elem.append(hook);
          $compile(hook)(scope);
        }
      }
    }
  };

  function addController(template, attrs) {
    var startDiv = '<div ng-controller="' + attrs.ngController + '">';
    var endDiv = '</div>';
    return startDiv + template + endDiv;
  }
}
