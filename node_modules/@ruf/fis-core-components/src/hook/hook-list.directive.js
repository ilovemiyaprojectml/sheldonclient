/**
 * @name fisHookLIst
 * @description The fisHookList directive will read the config and add a list of fisHook directives to the DOM
 *
 */
export default function ($compile, fisConfig) {
  'ngInject';

  return {
    restrict: 'E',
    replace: 'true',
    template: '<div class="hookList" />',
    link: function (scope, elem, attrs) {
      var newTemplate = buildHookListElement(attrs);
      var hookList = angular.element(newTemplate);
      elem.append(hookList);
      $compile(hookList)(scope);
    }
  };

  function buildHookListElement(attrs) {
    var buffer = [];
    if (fisConfig && fisConfig.hookListConfig) {
      buffer.push('<div>');

      fisConfig.hookListConfig.forEach(function (configItem) {
        if (configItem.enabled === 'true') {
          if (configItem.id === attrs.id) {
            buffer.push(buildHookElement(configItem));
          }
        }
      });
      buffer.push('</div>');
    }
    return buffer.join('');
  }

  function buildHookElement(item) {
    var hooks = item.hooks;
    var buffer = ['<div'];
    hooks.forEach(function (hookId) {
      buffer.push('<div>');
      buffer.push('<fis-hook id="');
      buffer.push(hookId);
      buffer.push('"');
      buffer.push(' />');
      buffer.push('</div>');
    });
    buffer.push('</div>');
    return buffer.join('');
  }
}
