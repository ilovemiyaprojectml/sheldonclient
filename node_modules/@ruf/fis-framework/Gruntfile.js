/*global module:false*/
var license = require('@ruf/fis-license').commented(require('./package'));

module.exports = function (grunt) {
  require('matchdep').filterDev('grunt-*').forEach(grunt.loadNpmTasks);
  require('matchdep').filterDev('@ruf/grunt-*').forEach(grunt.loadNpmTasks);

  var deps = [
    'node_modules/jquery/dist/jquery.js',
    'node_modules/jquery-ui-dist/jquery-ui.js',
    'node_modules/angular/angular.js',
    'node_modules/angular-resource/angular-resource.js',
    'node_modules/angular-route/angular-route.js',
    'node_modules/angular-animate/angular-animate.js',
    'node_modules/angular-sanitize/angular-sanitize.js',

    'node_modules/underscore/underscore.js',

    'node_modules/@ruf/kendo-ui/src/js/kendo.all.js',
    'node_modules/@ruf/kendo-ui/src/js/cultures/kendo.culture.en.js',

    'node_modules/keymaster/keymaster.js',
    'node_modules/angular-ui-router/release/angular-ui-router.js',
    'node_modules/angular-ui-bootstrap/dist/ui-bootstrap-tpls.js',
    'node_modules/angular-smart-table/dist/smart-table.js',
    'node_modules/@ruf/fis-bootstrap-components/dist/fis-bootstrap-components.js',
    'node_modules/@ruf/fis-bootstrap-table/dist/fis-bootstrap-table.js'
  ];

  var releaseVersion = grunt.option('releaseVersion');

  var fisComps = [
    'node_modules/@ruf/fis-core-components/dist/fis-core-components.js',
    'node_modules/@ruf/fis-kendo-components/dist/fis-kendo-components.js',
    'node_modules/@ruf/fis-widgets/dist/fis-widgets.js',
    'node_modules/@ruf/fis-shell/dist/fis-shell.js',
    'node_modules/@ruf/fis-bootstrap/dist/fis-bootstrap.js'
  ]

  var fisCompsMin = [
    'node_modules/@ruf/fis-core-components/dist/fis-core-components.min.js',
    'node_modules/@ruf/fis-kendo-components/dist/fis-kendo-components.min.js',
    'node_modules/@ruf/fis-widgets/dist/fis-widgets.min.js',
    'node_modules/@ruf/fis-shell/dist/fis-shell.min.js',
    'node_modules/@ruf/fis-bootstrap/dist/fis-bootstrap.min.js'
  ]

  var metadataFiles = [
    'node_modules/@ruf/fis-core-components/dist/fis-core-components-metadata.js',
    'node_modules/@ruf/fis-kendo-components/dist/fis-kendo-components-metadata.js',
    'node_modules/@ruf/fis-widgets/dist/fis-widgets-metadata.js',
    'node_modules/@ruf/fis-shell/dist/fis-shell-metadata.js',
    'node_modules/@ruf/fis-bootstrap/dist/fis-bootstrap-metadata.js'
  ];

  var metadataFilesMin = [
    'node_modules/@ruf/fis-core-components/dist/fis-core-components-metadata.min.js',
    'node_modules/@ruf/fis-kendo-components/dist/fis-kendo-components-metadata.min.js',
    'node_modules/@ruf/fis-widgets/dist/fis-widgets-metadata.min.js',
    'node_modules/@ruf/fis-shell/dist/fis-shell-metadata.min.js',
    'node_modules/@ruf/fis-bootstrap/dist/fis-bootstrap-metadata.min.js'
  ];

  var testDependencies = deps.concat([
    'node_modules/angular-mocks/angular-mocks.js',
    'node_modules/jasmine-ajax/lib/mock-ajax.js'
  ]);

  var testDepsSgComponentsCommon = [
    'node_modules/@ruf/kendo-ui/src/js/cultures/kendo.culture.*.js',
    'node_modules/jasmine-jquery/lib/jasmine-jquery.js',
    'node_modules/@ruf/fis-mocks/dist/fis-mocks.js'
  ];

  var testDepsSgComponents = testDepsSgComponentsCommon.concat([
    'node_modules/@ruf/fis-core-components/src/test/unit/*Spec.js',
    'node_modules/@ruf/fis-core-components/src/test/unit/**/*Spec.js',
    'node_modules/@ruf/fis-widgets/test/spec/**/*Spec.js'
  ]);

  var testDepsSgComponentsKendo = testDepsSgComponentsCommon.concat([
    'node_modules/@ruf/fis-kendo-components/src/test/**/*Spec.js'
  ]);

  var testDepsAppShell = [
    'node_modules/@ruf/fis-mocks/dist/fis-mocks.js',
    'node_modules/@ruf/fis-shell/src/test/**/*Spec.js'
  ];

  var testDistDepFiles = [
    'fis-fmk-core-deps.js',
    'fis-fmk-core.js',
    'node_modules/angular-mocks/angular-mocks.js'
  ];

  var testdistMegaFiles = [
    'fis-fmk-core-mega.js',
    'node_modules/angular-mocks/angular-mocks.js',
  ];

  var testDistMinDepFiles = [
    'fis-fmk-core-deps.min.js',
    'fis-fmk-core.min.js',
    'node_modules/angular-mocks/angular-mocks.js'
  ];

  var testDistMinMegaFiles = [
    'fis-fmk-core-mega.min.js',
    'node_modules/angular-mocks/angular-mocks.js'
  ];

  grunt.initConfig({

    replace: {
      release: {
        src: ['bower.json', 'package.json'],
        options: {
          persist: {
            dest: 'replacementsTemp.json',
            invert: true
          }
        },
        overwrite: true,
        replacements: [
          {
            from: new RegExp('(https?\\S+git#)(develop)', 'g'),
            to: function (matchedWord, index, fullText, regexMatches) {
              return regexMatches[0] + releaseVersion;
            }
          }
        ]
      },
      develop: {
        src: ['bower.json', 'package.json'],
        options: {
          restore: {
            src: 'replacementsTemp.json',
            remove: true
          },
        },
        overwrite: true
      }
    },

    uglify: {
      options: {
        mangle: true,
        compress: {
          warnings: true
        },
        preserveComments: 'some'
      },
      deps: {
        options: {
          compress: false
        },
        src: 'fis-fmk-core-deps.js',
        dest: 'fis-fmk-core-deps.min.js'
      },
      metadata: {
        src: 'fis-fmk-metadata.js',
        dest: 'fis-fmk-metadata.min.js'
      }
    },

    concat: {
      options: {
        separator: ';\n'
      },
      deps: {
        src: deps,
        dest: 'fis-fmk-core-deps.js'
      },
      core: {
        options: {
          // banner: license,
        },
        src: fisComps,
        dest: 'fis-fmk-core.js'
      },
      coreMin: {
        options: {
          banner: license,
        },
        src: fisCompsMin,
        dest: 'fis-fmk-core.min.js'
      },
      coreMega: {
        options: {
          banner: license,
        },
        src: [
          'fis-fmk-core-deps.js',
          'fis-fmk-core.js'
        ],
        dest: 'fis-fmk-core-mega.js'
      },
      coreMegaMin: {
        options: {
          banner: license,
        },
        src: [
          'fis-fmk-core-deps.min.js',
          'fis-fmk-core.min.js'
        ],
        dest: 'fis-fmk-core-mega.min.js'
      },
      metadata: {
        options: {
          banner: 'angular.module(\'fis.metadata\', [\'fis.core.metadata\',\'fis.kendo.metadata\',\'fis.widgets.metadata\', \'shell.metadata\', \'fis.bootstrap.metadata\']);\n',
          separator: '\n',
        },
        src: metadataFiles,
        dest: 'fis-fmk-metadata.js'
      }
    },

    karma: {
      options: {
        configFile: 'karma.conf.js',
        singleRun: true,
        browsers: ['PhantomJS']
      },
      distAppShell: {
        options: {
          files: testDependencies.concat(['fis-fmk-core.js'], testDepsAppShell),
          junitReporter: {
            outputFile: 'target/js-test-reports/dist-app-shell-test-results.xml',
            suite: 'distAppShell'
          }
        }
      },
      distSgComponents: {
        options: {
          files: testDependencies.concat(['fis-fmk-core.js'], testDepsSgComponents),
          junitReporter: {
            outputFile: 'target/js-test-reports/dist-fis-components-test-results.xml',
            suite: 'distSgComponents'
          }
        }
      },
      distSgComponentsKendo: {
        options: {
          files: testDependencies.concat(['fis-fmk-core.js'], testDepsSgComponentsKendo),
          junitReporter: {
            outputFile: 'target/js-test-reports/dist-fis-components-kendo-test-results.xml',
            suite: 'distSgComponentsKendo'
          }
        }
      },
      distDepAppShell: {
        options: {
          files: testDistDepFiles.concat(testDepsAppShell),
          junitReporter: {
            outputFile: 'target/js-test-reports/dist-dep-app-shell-test-results.xml',
            suite: 'distDepAppShell'
          }
        }
      },
      distDepSgComponents: {
        options: {
          files: testDistDepFiles.concat(testDepsSgComponents),
          junitReporter: {
            outputFile: 'target/js-test-reports/dist-dep-fis-components-test-results.xml',
            suite: 'distDepSgComponents'
          }
        }
      },
      distDepSgComponentsKendo: {
        options: {
          files: testDistDepFiles.concat(testDepsSgComponentsKendo),
          junitReporter: {
            outputFile: 'target/js-test-reports/dist-dep-fis-components-kendo-test-results.xml',
            suite: 'distDepSgComponentsKendo'
          }
        }
      },
      distMegaAppShell: {
        options: {
          files: testdistMegaFiles.concat(testDepsAppShell),
          junitReporter: {
            outputFile: 'target/js-test-reports/dist-mega-app-shell-test-results.xml',
            suite: 'distMegaAppShell'
          }
        }
      },
      distMegaSgComponents: {
        options: {
          files: testdistMegaFiles.concat(testDepsSgComponents),
          junitReporter: {
            outputFile: 'target/js-test-reports/dist-mega-fis-components-test-results.xml',
            suite: 'distMegaSgComponents'
          }
        }
      },
      distMegaSgComponentsKendo: {
        options: {
          files: testdistMegaFiles.concat(testDepsSgComponentsKendo),
          junitReporter: {
            outputFile: 'target/js-test-reports/dist-mega-fis-components-kendo-test-results.xml',
            suite: 'distMegaSgComponentsKendo'
          }
        }
      },
      distMinAppShell: {
        options: {
          files: testDependencies.concat(['fis-fmk-core.min.js'], testDepsAppShell),
          junitReporter: {
            outputFile: 'target/js-test-reports/dist-min-app-shell-test-results.xml',
            suite: 'distMinAppShell'
          }
        }
      },
      distMinSgComponents: {
        options: {
          files: testDependencies.concat(['fis-fmk-core.min.js'], testDepsSgComponents),
          junitReporter: {
            outputFile: 'target/js-test-reports/dist-min-fis-components-test-results.xml',
            suite: 'distMinSgComponents'
          }
        }
      },
      distMinSgComponentsKendo: {
        options: {
          files: testDependencies.concat(['fis-fmk-core.min.js'], testDepsSgComponentsKendo),
          junitReporter: {
            outputFile: 'target/js-test-reports/dist-min-fis-components-kendo-test-results.xml',
            suite: 'distMinSgComponentsKendo'
          }
        }
      },
      distMinDepAppShell: {
        options: {
          files: testDistMinDepFiles.concat(testDepsAppShell),
          junitReporter: {
            outputFile: 'target/js-test-reports/dist-dep-min-app-shell-test-results.xml',
            suite: 'distMinDepAppShell'
          }
        }
      },
      distMinDepSgComponents: {
        options: {
          files: testDistMinDepFiles.concat(testDepsSgComponents),
          junitReporter: {
            outputFile: 'target/js-test-reports/dist-dep-min-fis-components-test-results.xml',
            suite: 'distMinDepSgComponents'
          }
        }
      },
      distMinDepSgComponentsKendo: {
        options: {
          files: testDistMinDepFiles.concat(testDepsSgComponentsKendo),
          junitReporter: {
            outputFile: 'target/js-test-reports/dist-dep-min-fis-components-kendo-test-results.xml',
            suite: 'distMinDepSgComponentsKendo'
          }
        }
      },
      distMinMegaAppShell: {
        options: {
          files: testDistMinMegaFiles.concat(testDepsAppShell),
          junitReporter: {
            outputFile: 'target/js-test-reports/dist-mega-min-app-shell-test-results.xml',
            suite: 'distMinMegaAppShell'
          }
        }
      },
      distMinMegaSgComponents: {
        options: {
          files: testDistMinMegaFiles.concat(testDepsSgComponents),
          junitReporter: {
            outputFile: 'target/js-test-reports/dist-mega-min-fis-components-test-results.xml',
            suite: 'distMinMegaSgComponents'
          }
        }
      },
      distMinMegaSgComponentsKendo: {
        options: {
          files: testDistMinMegaFiles.concat(testDepsSgComponentsKendo),
          junitReporter: {
            outputFile: 'target/js-test-reports/dist-mega-min-fis-components-kendo-test-results.xml',
            suite: 'distMinMegaSgComponentsKendo'
          }
        }
      }
    },

    bump: {
      options: {
        files: [
          'README.md',
          'package.json',
          'bower.json',
          'fis-fmk-core-mega.js',
          'fis-fmk-core-mega.min.js',
          'fis-fmk-core.js',
          'fis-fmk-core.min.js',
          'fis-fmk-metadata.js',
          'fis-fmk-metadata.min.js'
        ],
        updateConfigs: [],
        commit: true,
        commitMessage: 'Release v%VERSION% #noissue',
        commitFiles: ['-a'], // '-a' for all files
        createTag: true,
        tagName: 'v%VERSION%',
        tagMessage: 'Version %VERSION%',
        push: false,
        pushTo: 'origin master',
        gitDescribeOptions: '--tags --always --abbrev=1 --dirty=-d' // options to use with '$ git describe'
      }
    }
  });

  grunt.registerTask('default', [
    'build',
    'test'
  ]);

  grunt.registerTask('release', [
    'build',
    'bump'
  ]);

  grunt.registerTask('build', [
    'concat:deps',
    'uglify:deps',
    'concat:core',
    'concat:coreMin',
    'concat:coreMega',
    'concat:coreMegaMin',
    'concat:metadata',
    'uglify:metadata'
  ]);

  grunt.registerTask('test', [
    'karma:distAppShell',
    'karma:distSgComponents',
    'karma:distSgComponentsKendo',
    'karma:distDepAppShell',
    'karma:distDepSgComponents',
    'karma:distDepSgComponentsKendo',
    'karma:distMegaAppShell',
    'karma:distMegaSgComponents',
    'karma:distMegaSgComponentsKendo',
    'karma:distMinAppShell',
    'karma:distMinSgComponents',
    'karma:distMinSgComponentsKendo',
    'karma:distMinDepAppShell',
    'karma:distMinDepSgComponents',
    'karma:distMinDepSgComponentsKendo',
    'karma:distMinMegaAppShell',
    'karma:distMinMegaSgComponents',
    'karma:distMinMegaSgComponentsKendo'
  ]);
};
