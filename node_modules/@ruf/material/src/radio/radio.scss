@import '~@ruf/theming/styles/_core.variables';

// Define a mixin that outputs the structural styles for the component.
@mixin ruf-mat-radio($cls: '[fisStyle]', $config: ()) {

  $radio-size: ruf-map-get($config, radio-size, ruf-to-rem(20px)) !default;
  $radio-ripple-radius: ruf-map-get($config, radio-ripple-radius, ruf-to-rem(20px));
  $label-padding: ruf-map-get($config, label-padding, ruf-to-rem(12px));

  .mat-radio-button#{$cls} {
    .mat-radio-label {
      white-space: normal;
    }

    // Container for radio circles and ripple.
    .mat-radio-container {
      height: $radio-size;
      width: $radio-size;
    }

    // The outer circle for the radio, always present.
    .mat-radio-outer-circle {
      height: $radio-size;
      width: $radio-size;
    }

    // The inner circle for the radio, shown when checked.
    .mat-radio-inner-circle {
      height: $radio-size;
      width: $radio-size;
    }

    // Text label next to radio.
    .mat-radio-label-content {
      padding-left: $label-padding;
      [dir='rtl'] & {
        padding-right: $label-padding;
      }
    }

    // Alignment.
    .mat-radio-label-content.mat-radio-label-before {
      padding-right: $label-padding;

      [dir='rtl'] & {
        padding-left: $label-padding;
      }
    }
    .mat-radio-button .mat-radio-ripple {
      height: calc(#{$radio-ripple-radius} * 2);
      left: calc(50% - #{$radio-ripple-radius});
      top: calc(50% - #{$radio-ripple-radius});
      width: calc(#{$radio-ripple-radius} * 2);
    }
  }
}
