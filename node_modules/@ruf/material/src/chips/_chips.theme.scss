// Define a mixin that accepts a theme and outputs the color styles for the component.
@mixin ruf-mat-chips-theme($theme, $cls: '[fisStyle]') {

  $primary: map-get($theme, primary);
  $accent: map-get($theme, accent);
  $warn: map-get($theme, warn);
  $emphasis: map-get($theme, emphasis);
  $background: map-get($theme, background);
  $foreground: map-get($theme, foreground);
  $unselected-background: mat-color($background, unselected-chip);
  $unselected-foreground: mat-color($foreground, text);

  $theme-colors: (
      primary: $primary,
      accent: $accent,
      warn: $warn,
      emphasis: $emphasis
  );

  // sass-lint:disable-block no-empty-rulesets
  .mat-chip-list#{$cls} {

    mat-chip {
      @each $name, $color in $theme-colors {
        &.mat-#{$name} {
          background-color: ruf-color($color);
          color: ruf-color($color, default-contrast);

          .mat-chip-remove {
            color: ruf-color($color, default-contrast);
          }

          &.mat-chip-disabled, &.mat-chip-disabled::after {
            background-color: ruf-color($color);
            opacity: 0.5;
          }
        }
      }
    }
  }
}

@mixin  ruf-mat-chips-typography($config, $cls: '[fisStyle]') {
  // sass-lint:disable-block no-empty-rulesets
}
