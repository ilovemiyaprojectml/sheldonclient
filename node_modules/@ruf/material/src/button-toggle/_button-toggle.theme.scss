// Import all the tools needed to customize the theme and extract parts of it

// Define a mixin that accepts a theme and outputs the color styles for the component.
@mixin ruf-mat-button-toggle-theme($theme, $cls: '[fisStyle]') {
  $primary: map-get($theme, primary);
  $accent: map-get($theme, accent);
  $emphasis: map-get($theme, emphasis);
  $background: map-get($theme, background);
  $foreground: map-get($theme, foreground);

  .mat-button-toggle-group#{$cls} {
    box-shadow: none;

    .mat-button-toggle, .mat-button-toggle#{$cls} {
      border: 1px solid ruf-color($foreground, base, 0.38);
      color: ruf-color($foreground, text);
      
      &.mat-button-toggle-checked {
        background-color: mat-color($background, selected-button, 0.20);
        border: 1px solid ruf-color($primary);
        color: ruf-color($primary);
      }

      &.mat-button-toggle-disabled {
        background-color: ruf-color($background, disabled-button-toggle);
        color: ruf-color($foreground, disabled-button);

        &.mat-button-toggle-checked {
          background-color: ruf-color($background, selected-disabled-button);
          border: 1px solid ruf-color($foreground, base, 0.38);
        }
      }
    }
  }

  .mat-button-toggle#{$cls} {
    border: 1px solid ruf-color($foreground, base, 0.38);
    color: ruf-color($foreground, text);

    &.mat-button-toggle-checked {
      background-color: mat-color($background, selected-button, 0.20);
      border: 1px solid ruf-color($primary);
      color: ruf-color($primary);
    }
  }
}
// sass-lint:disable-block no-empty-rulesets
@mixin ruf-mat-button-toggle-typography($config) {
  
}
