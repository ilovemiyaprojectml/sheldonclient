@mixin ruf-mat-input-theme-box($theme, $cls1: '[boxStyle]', $cls2: '[fisStyle]') {

  $primary: map-get($theme, primary);
  $accent: map-get($theme, accent);
  $warn: map-get($theme, warn);
  $background: map-get($theme, background);
  $foreground: map-get($theme, foreground);

  $ruf-input-error-color: ruf-color($background, error);
  $ruf-input-text-color:  ruf-color($foreground, input-value);
  $main-colors: primary, accent, warn, emphasis;

  @include _ruf-boxed-input-icon-color($theme, $main-colors);

  .mat-form-field-appearance-outline:not(.mat-form-field-appearance-legacy)#{$cls1},
  .mat-form-field-appearance-outline:not(.mat-form-field-appearance-legacy)#{$cls2} {
    &:not(.mat-focused):not(.mat-form-field-invalid):not(.mat-form-field-disabled) {
        .mat-form-field-outline, .mat-form-field-outline-thick {
          color: ruf-color($foreground, input-border);
        }
     }

     .mat-input-element {
       color: $ruf-input-text-color;
     }

     &.mat-form-field-invalid {
        .mat-form-field-outline-thick {
          color: $ruf-input-error-color;
        }

        .mat-input-element {
          caret-color: $ruf-input-error-color;
        }
     }

    .mat-icon-button {
      // $foreground link color added on mat-icon-button in _input.theme.scss
      // for hover and focus but for boxed input it is not required.
      .mat-icon:hover, .mat-icon:focus {
        color: inherit;
      }
    }

     &.mat-form-field-disabled {
       .mat-form-field-outline,
       .mat-form-field-outline-thick,
       .mat-form-field-suffix .mat-icon,
       .mat-form-field-prefix .mat-icon {
          color: ruf-color($foreground, input-border);
        }

        .mat-icon-button:hover {
          // disbale halo when input field is disabled.
          background-color: transparent;
        }
     }
  }
}

@mixin ruf-mat-input-typography-box($config, $cls1: '[boxStyle]', $cls2: '[fisStyle]') {
   $ruf-label-font-size: ruf-font-size($config, subheading-2);
  	.mat-form-field-appearance-outline#{$cls1},
    .mat-form-field-appearance-outline#{$cls2} {
      .mat-form-field-prefix,
      .mat-form-field-suffix {
        font-size: ruf-font-size($config, subheading-2);
        .mat-icon {
          font-size: ruf-font-size($config, subheading-2);
        }
      }

      .mat-form-field-wrapper .mat-form-field-subscript-wrapper {
          font-size: ruf-font-size($config, caption);
       }

       .mat-input-element {
        font-size: $ruf-label-font-size;
      }

     }
}

  @mixin _ruf-boxed-input-icon-color($color-map, $colors) {
    @each $color in $colors {
      .mat-focused.mat-#{$color}:not(.mat-form-field-invalid) {
         .mat-form-field-suffix, .mat-form-field-prefix  {
           .mat-icon, .mat-icon-button::after {
             color: ruf-color(map-get($color-map, $color));
           }
         }
       }
    }
  }


