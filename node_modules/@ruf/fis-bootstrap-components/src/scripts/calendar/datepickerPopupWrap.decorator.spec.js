describe('Directive: fis.bootstrap.calendar datepickerPopupWrap', function () {
  'use strict';

  var htmlelement = null;
  var template;
  var templateUrl;
  beforeEach(function () {
    angular.mock.module('fis.bootstrap.components');
    angular.mock.inject(function ($rootScope, $templateCache, uibDatepickerPopupWrapDirective) {
      templateUrl = uibDatepickerPopupWrapDirective[0].templateUrl;

      htmlelement = '<ul class="uib-datepicker-popup dropdown-menu bs-override-style" dropdown-nested ng-if="isOpen" style="display: block" ng-style="{top: position.top+\'px\', left: position.left+\'px\'}" ng-keydown="keydown($event)" ng-click="$event.stopPropagation()">\n <li ng-transclude></li>\n <li ng-if="showButtonBar" style="padding:10px 9px 2px" class="uib-button-bar">\n <span class="btn-group pull-left">\n <button type="button" class="btn btn-sm btn-info fis-bs-calendar-btn-info" ng-click="select(\'today\')" ng-disabled="isDisabled(\'today\')" fis-unique-id >{{ getText(\'current\')|translate }}</button>\n <button type="button" class="btn btn-sm fis-bs-calendar-btn-danger" ng-click="select(null)" fis-unique-id >{{ getText(\'clear\')|translate }}</button>\n </span>\n <button type="button" class="btn btn-sm fis-bs-calendar-btn-success pull-right" ng-click="close()" fis-unique-id >{{ getText(\'close\')|translate }}</button>\n </li>\n</ul>';

      template = $templateCache.get('calendar/datepickerPopupWrap.decorator.html');
    });
  });

  /* jshint unused: false */
  it('should match the retreived datepickerPopup template and sample html markup', inject(function () {
    expect(template).toBe(htmlelement);
  }));

  it('should validate datepickerPopup decorated property', function () {
    expect(templateUrl).toBe('calendar/datepickerPopupWrap.decorator.html');
  });
});
