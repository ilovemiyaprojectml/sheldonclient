(function () {
  'use strict';

  angular
    .module('fis.bootstrap.toggleswitch')
    .directive('fisBsToggleswitch', toggleswitch);

  function toggleswitch() {
    'use strict';
    return {
      restrict: 'E',
      replace: 'true',
      scope: {
        fisTsInfosource: '=?',
        fisTsOnchangeRef: '&fisTsOnchange'
      },
      link: function ($scope, tElement, tAttrs) {
        /* needed to set this values in the link section to allow time for possible translation to take affect */
        $scope.fisTSTrueText = tAttrs.fisTsTruetext;
        $scope.fisTSFalseText = tAttrs.fisTsFalsetext;
      },
      controller: ['$scope', '$element', '$attrs', '$timeout', function ($scope, tElement, tAttrs, $timeout) {
        $scope.toggleSwitchElement = tElement;

        $scope.fisTSId = tAttrs.fisTsId;
        $scope.fisTSName = tAttrs.fisTsName;
        $scope.fisTSClass = 'fis-bs-switch';
        $scope.fisTSTrueValue = tAttrs.fisTsTruevalue;
        $scope.fisTSFalseValue = tAttrs.fisTsFalsevalue;
        $scope.fisTSTrueText = tAttrs.fisTsTruetext;
        $scope.fisTSFalseText = tAttrs.fisTsFalsetext;
        $scope.fisTSMinWidth = tAttrs.fisTsMinwidth;

        $scope.fisTsOnchange = function () {
          $timeout(function () {
            $scope.fisTsOnchangeRef();
          }, 0);
        };

        $scope.fisTSHandleLeftSwipe = function ($event) {
          if ($event.type.search('touch') !== -1) {
            // change value if it is a touch event
            angular.element($scope.toggleSwitchElement.children()[0]).prop('checked', false);
          }
        };
        $scope.fisTSHandleRightSwipe = function ($event) {
          if ($event.type.search('touch') !== -1) {
            // change value if it is a touch event
            angular.element($scope.toggleSwitchElement.children()[0]).prop('checked', true);
          }
        };
      }],
      templateUrl: 'toggleswitch/toggleswitch.directive.html'

    };
  }
})();

