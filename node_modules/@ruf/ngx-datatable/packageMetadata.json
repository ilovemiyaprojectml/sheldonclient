{
 "htmldocs": "",
 "contents": [
  {
   "type": "NgModule",
   "name": "RufNgxDatatableModule",
   "path": "/src/ngx-datatable.module.ts",
   "jsDoc": "",
   "settings": {
    "imports": [
     "CommonModule",
     "NgxDatatableModule"
    ],
    "exports": [
     "NgxDatatableModule"
    ]
   }
  }
 ],
 "examples": [
  {
   "/src/examples/basic": {
    "template": "ruf-demo-workspace",
    "title": "Basic Usage",
    "description": "This example shows basic usage of ngx datatble.",
    "tags": [
     "RUF",
     "table",
     "datatable",
     "data",
     "grid",
     "basic"
    ],
    "dependencies": {
     "@angular/animations": "~8.0.0",
     "@angular/cdk": "^8.0.1",
     "@angular/common": "~8.0.0",
     "@angular/compiler": "~8.0.0",
     "@angular/core": "~8.0.0",
     "@angular/flex-layout": "~8.0.0-beta.26",
     "@angular/forms": "~8.0.0",
     "@angular/material": "^8.0.1",
     "@angular/platform-browser": "~8.0.0",
     "@angular/platform-browser-dynamic": "~8.0.0",
     "@angular/router": "~8.0.0",
     "core-js": "^2.6.5",
     "hammerjs": "^2.0.8",
     "rxjs": "~6.5.2",
     "web-animations-js": "^2.3.1",
     "zone.js": "^0.9.1",
     "@ruf/ngx-datatable": "latest"
    },
    "files": {
     "index.html": "<demo-ngx-table-basic></demo-ngx-table-basic>",
     "_example.theme.scss": "@import 'node_modules/@ruf/theming/styles/theming/theming';\n@import 'node_modules/@ruf/ngx-datatable/styles/all-theme.scss';\n@import 'node_modules/@ruf/ngx-datatable/styles/_ngx-datatable.structure.scss';\n\n// a convenience mixin that aggregates all of your component theme mixins\n@mixin example-theme($theme) {\n  @include ruf-ngx-datatable-theme($theme);\n  demo-ngx-table-basic {\n    @include ruf-ngx-datatable();\n  }\n}\n\n@mixin example-typography($config) {\n  demo-ngx-table-basic {\n  }\n}\n",
     "basic-table.component.html": "<div class=\"grid-selection\">\n  <br>\n  <div class=\"table-content\">\n    <ngx-datatable fisStyle [columnMode]=\"'force'\" [footerHeight]=\"50\" [limit]=\"20\" [rows]=\"'assets/data/basicexample.json' | rufData | async\">\n      <ngx-datatable-column name=\"Id\"></ngx-datatable-column>\n      <ngx-datatable-column name=\"Name\"></ngx-datatable-column>\n      <ngx-datatable-column name=\"Gender\"></ngx-datatable-column>\n      <ngx-datatable-column name=\"Age\"></ngx-datatable-column>\n      <ngx-datatable-column name=\"City\" prop=\"address.city\"></ngx-datatable-column>\n      <ngx-datatable-column name=\"State\" prop=\"address.state\"></ngx-datatable-column>\n    </ngx-datatable>\n  </div>\n</div>\n",
     "basic-table.component.ts": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'demo-ngx-table-basic',\n  templateUrl: './basic-table.component.html'\n})\n\nexport class BasicComponent {\n}\n",
     "example.module.ts": "import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { RufNgxDatatableModule } from '@ruf/ngx-datatable';\n\nimport {\n  RufUniqueIdModule\n} from '@ruf/shell';\nimport { RufPipesModule } from '@ruf/pipes';\nimport { BasicComponent } from './basic-table.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RufPipesModule,\n    RufNgxDatatableModule,\n    RufUniqueIdModule\n  ],\n  declarations: [\n    BasicComponent\n  ],\n  exports: [\n    BasicComponent\n  ]\n})\nexport class ExampleModule { }\n"
    }
   },
   "/src/examples/checkbox-selection": {
    "template": "ruf-demo-workspace",
    "title": "Checkbox Selection",
    "description": "This example shows ngx datatble with row selection using checkbox.",
    "tags": [
     "RUF",
     "table",
     "datatable",
     "data",
     "grid",
     "selection"
    ],
    "dependencies": {
     "@angular/animations": "~8.0.0",
     "@angular/cdk": "^8.0.1",
     "@angular/common": "~8.0.0",
     "@angular/compiler": "~8.0.0",
     "@angular/core": "~8.0.0",
     "@angular/flex-layout": "~8.0.0-beta.26",
     "@angular/forms": "~8.0.0",
     "@angular/material": "^8.0.1",
     "@angular/platform-browser": "~8.0.0",
     "@angular/platform-browser-dynamic": "~8.0.0",
     "@angular/router": "~8.0.0",
     "core-js": "^2.6.5",
     "hammerjs": "^2.0.8",
     "rxjs": "~6.5.2",
     "web-animations-js": "^2.3.1",
     "zone.js": "^0.9.1",
     "@ruf/ngx-datatable": "latest"
    },
    "files": {
     "index.html": "<demo-ngx-table-checkbox></demo-ngx-table-checkbox>",
     "_example.theme.scss": "@import 'node_modules/@ruf/theming/styles/theming/theming';\n@import 'node_modules/@ruf/ngx-datatable/styles/all-theme.scss';\n@import 'node_modules/@ruf/ngx-datatable/styles/_ngx-datatable.structure.scss';\n\n// a convenience mixin that aggregates all of your component theme mixins\n@mixin example-theme($theme) {\n  @include ruf-ngx-datatable-theme($theme);\n  demo-ngx-table-checkbox {\n    @include ruf-ngx-datatable();\n  }\n}\n\n@mixin example-typography($config) {\n  demo-ngx-table-checkbox {\n  }\n}\n",
     "checkbox-selection.component.ts": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'demo-ngx-table-checkbox',\n  templateUrl: './checkbox-selection.html',\n})\nexport class CheckboxSelectionComponent {\n\n  selected = [];\n\n  onActivate(event) {\n    console.log('Activate Event', event);\n  }\n\n  displayCheck(row) {\n    return row.name !== 'Ethel Price';\n  }\n\n  onSelect({ selected }) {\n    this.selected.splice(0, this.selected.length);\n    this.selected.push(...selected);\n  }\n}\n",
     "checkbox-selection.html": "<div class=\"grid-selection\">\n  <br>\n  <div class=\"table-content\">\n    <div>\n      <ngx-datatable\n        fisStyle\n        [rows]=\"'assets/data/company.json' | rufData | async\"\n        [columnMode]=\"'force'\"\n        [footerHeight]=\"50\"\n        [limit]=\"15\"\n        [selected]=\"selected\"\n        [selectionType]=\"'checkbox'\"\n        [selectAllRowsOnPage]=\"false\"\n        [displayCheck]=\"displayCheck\"\n        (activate)=\"onActivate($event)\"\n        (select)='onSelect($event)'>\n        <ngx-datatable-column\n          [width]=\"30\"\n          [sortable]=\"false\"\n          [canAutoResize]=\"false\"\n          [draggable]=\"false\"\n          [resizeable]=\"false\"\n          [headerCheckboxable]=\"true\"\n          [checkboxable]=\"true\">\n        </ngx-datatable-column>\n        <ngx-datatable-column name=\"Name\"></ngx-datatable-column>\n        <ngx-datatable-column name=\"Gender\"></ngx-datatable-column>\n        <ngx-datatable-column name=\"Company\"></ngx-datatable-column>\n      </ngx-datatable>\n    </div>\n    <div class='selected-column'>\n      <h4>Selections <small>({{selected?.length}})</small></h4>\n      <ul>\n        <li *ngFor='let sel of selected'>\n          {{sel.name}}\n        </li>\n        <li *ngIf=\"!selected?.length\">No Selections</li>\n      </ul>\n    </div>\n  </div>\n</div>\n",
     "example.module.ts": "import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { RufNgxDatatableModule } from '@ruf/ngx-datatable';\n\nimport {\n  RufUniqueIdModule\n} from '@ruf/shell';\nimport { RufPipesModule } from '@ruf/pipes';\nimport { CheckboxSelectionComponent } from './checkbox-selection.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RufPipesModule,\n    RufNgxDatatableModule,\n    RufUniqueIdModule\n  ],\n  declarations: [\n    CheckboxSelectionComponent\n  ],\n  exports: [\n    CheckboxSelectionComponent\n  ]\n})\nexport class ExampleModule { }\n"
    }
   },
   "/src/examples/grid-filter": {
    "template": "ruf-demo-workspace",
    "title": "Datatable Filter",
    "description": "This example shows how filtering works with ngx datatble.",
    "tags": [
     "RUF",
     "table",
     "datatable",
     "data",
     "grid",
     "filter"
    ],
    "dependencies": {
     "@angular/animations": "~8.0.0",
     "@angular/cdk": "^8.0.1",
     "@angular/common": "~8.0.0",
     "@angular/compiler": "~8.0.0",
     "@angular/core": "~8.0.0",
     "@angular/flex-layout": "~8.0.0-beta.26",
     "@angular/forms": "~8.0.0",
     "@angular/material": "^8.0.1",
     "@angular/platform-browser": "~8.0.0",
     "@angular/platform-browser-dynamic": "~8.0.0",
     "@angular/router": "~8.0.0",
     "core-js": "^2.6.5",
     "hammerjs": "^2.0.8",
     "rxjs": "~6.5.2",
     "web-animations-js": "^2.3.1",
     "zone.js": "^0.9.1",
     "@ruf/ngx-datatable": "latest",
     "@swimlane/ngx-datatable": "^13.0.1"
    },
    "files": {
     "index.html": "<demo-ngx-table-filter></demo-ngx-table-filter>",
     "_example.theme.scss": "@import 'node_modules/@ruf/theming/styles/theming/theming';\n@import 'node_modules/@ruf/ngx-datatable/styles/all-theme.scss';\n@import 'node_modules/@ruf/ngx-datatable/styles/_ngx-datatable.structure.scss';\n\n// a convenience mixin that aggregates all of your component theme mixins\n@mixin example-theme($theme) {\n  @include ruf-ngx-datatable-theme($theme);\n  demo-ngx-table-filter {\n    @include ruf-ngx-datatable();\n  }\n}\n\n@mixin example-typography($config) {\n  demo-ngx-table-filter {\n  }\n}\n",
     "example.module.ts": "import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { RufNgxDatatableModule } from '@ruf/ngx-datatable';\n\nimport {\n  RufUniqueIdModule\n} from '@ruf/shell';\nimport { RufPipesModule } from '@ruf/pipes';\nimport { FilterBarComponent } from './grid-filter.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    HttpClientModule,\n    RufPipesModule,\n    RufNgxDatatableModule,\n    RufUniqueIdModule\n  ],\n  declarations: [\n    FilterBarComponent\n  ],\n  exports: [\n    FilterBarComponent\n  ]\n})\nexport class ExampleModule { }\n",
     "grid-filter.component.html": "<div id=\"grid\" class=\"grid-container\">\n\n  <div>\n    <input\n      type='text'\n      style='padding:8px;margin:15px auto;width:30%;'\n      placeholder='Type to filter by name...'\n      (keyup)='updateFilter($event)'\n    />\n    <ngx-datatable\n      #table\n      fisStyle\n      [columns]=\"columns\"\n      [columnMode]=\"'force'\"\n      [footerHeight]=\"50\"\n      [limit]=\"10\"\n      [rows]='rows$'>\n    </ngx-datatable>\n  </div>\n</div>\n",
     "grid-filter.component.ts": "import { Observable } from 'rxjs';\nimport {Component, ViewChild} from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { DatatableComponent } from '@swimlane/ngx-datatable';\nimport { RufDataPipe } from '@ruf/pipes';\n\n@Component({\n  selector: 'demo-ngx-table-filter',\n  templateUrl: './grid-filter.component.html',\n})\nexport class FilterBarComponent {\n  private dataPipe: RufDataPipe\n  rows$ = [];\n  temp = [];\n\n  columns = [\n    { prop: 'name' },\n    { name: 'Company' },\n    { name: 'Gender' }\n  ];\n\n  @ViewChild(DatatableComponent, {static: false}) table: DatatableComponent;\n\n  constructor(private http: HttpClient) {\n    this.dataPipe = new RufDataPipe(http);\n    this.fetch();\n  }\n\n\n  fetch() {\n    this.dataPipe.transform('assets/data/company.json').subscribe(\n      (data) => {\n        this.temp = [... data];\n        this.rows$ = data;\n      }\n    );\n  }\n\n  updateFilter(event) {\n    const val = event.target.value.toLowerCase();\n\n    // filter our data\n    const temp = this.temp.filter(function(d) {\n      return d.name.toLowerCase().indexOf(val) !== -1 || !val;\n    });\n\n    // update the rows\n    this.rows$ = temp;\n    // Whenever the filter changes, always go back to the first page\n    this.table.offset = 0;\n  }\n\n}\n"
    }
   },
   "/src/examples/inkbar": {
    "template": "ruf-demo-workspace",
    "title": "Row Border",
    "description": "This is an example with Row Borders for ngx datatble.",
    "tags": [
     "RUF",
     "table",
     "datatable",
     "data",
     "grid",
     "border",
     "inkbar"
    ],
    "dependencies": {
     "@angular/animations": "~8.0.0",
     "@angular/cdk": "^8.0.1",
     "@angular/common": "~8.0.0",
     "@angular/compiler": "~8.0.0",
     "@angular/core": "~8.0.0",
     "@angular/flex-layout": "~8.0.0-beta.26",
     "@angular/forms": "~8.0.0",
     "@angular/material": "^8.0.1",
     "@angular/platform-browser": "~8.0.0",
     "@angular/platform-browser-dynamic": "~8.0.0",
     "@angular/router": "~8.0.0",
     "core-js": "^2.6.5",
     "hammerjs": "^2.0.8",
     "rxjs": "~6.5.2",
     "web-animations-js": "^2.3.1",
     "zone.js": "^0.9.1",
     "@ruf/ngx-datatable": "latest"
    },
    "files": {
     "index.html": "<demo-ngx-table-inkbar></demo-ngx-table-inkbar>",
     "_example.theme.scss": "@import 'node_modules/@ruf/theming/styles/theming/theming';\n@import 'node_modules/@ruf/ngx-datatable/styles/all-theme.scss';\n@import 'node_modules/@ruf/ngx-datatable/styles/_ngx-datatable.structure.scss';\n\n// a convenience mixin that aggregates all of your component theme mixins\n@mixin example-theme($theme) {\n  @include ruf-ngx-datatable-theme($theme);\n  demo-ngx-table-inkbar {\n    @include ruf-ngx-datatable();\n  }\n}\n\n@mixin example-typography($config) {\n  demo-ngx-table-inkbar {\n  }\n}\n",
     "example.module.ts": "import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { MatRadioModule } from '@angular/material/radio';\n\nimport { RufNgxDatatableModule } from '@ruf/ngx-datatable';\n\nimport {\n  RufUniqueIdModule\n} from '@ruf/shell';\nimport { RufPipesModule } from '@ruf/pipes';\nimport { InkbarComponent } from './table-with-inkbar.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    RufPipesModule,\n    MatRadioModule,\n    RufNgxDatatableModule,\n    RufUniqueIdModule\n  ],\n  declarations: [\n    InkbarComponent\n  ],\n  exports: [\n    InkbarComponent\n  ]\n})\nexport class ExampleModule { }\n",
     "table-with-inkbar.component.html": "<h2 class=\"example-h2\">Inkbar configuration</h2>\n<section class=\"example-section\">\n  <label class=\"example-margin\">Border:</label>\n  <mat-radio-group rufId=\"has_border\" [(ngModel)]=\"hasBorder\">\n    <mat-radio-button rufId=\"border_true\" class=\"example-margin\" value=\"true\">True</mat-radio-button>\n    <mat-radio-button rufId=\"border_false\" class=\"example-margin\" value=\"false\">False</mat-radio-button>\n  </mat-radio-group>\n</section>\n<section class=\"example-section\">\n    <label class=\"example-margin\">Color:</label>\n    <mat-radio-group rufId=\"inkbar_color\" [(ngModel)]=\"inkbarColor\">\n      <mat-radio-button rufId=\"inkbar_color_primary\" class=\"example-margin\" value=\"primary\">Primary</mat-radio-button>\n      <mat-radio-button rufId=\"inkbar_color_accent\" class=\"example-margin\" value=\"accent\">Accent</mat-radio-button>\n      <mat-radio-button rufId=\"inkbar_color_accent\" class=\"example-margin\" value=\"emphasis\">Emphasis</mat-radio-button>\n      <mat-radio-button rufId=\"inkbar_color_warn\" class=\"example-margin\" value=\"warn\">Warn</mat-radio-button>\n      <mat-radio-button rufId=\"inkbar_color_error\" class=\"example-margin\" value=\"error\">Error</mat-radio-button>\n      <mat-radio-button rufId=\"inkbar_color_info\" class=\"example-margin\" value=\"info\">Info</mat-radio-button>\n      <mat-radio-button rufId=\"inkbar_color_success\" class=\"example-margin\" value=\"success\">Success</mat-radio-button>\n    </mat-radio-group>\n</section>\n<div class=\"grid-selection\">\n  <br>\n  <div class=\"table-content\">\n    <ngx-datatable fisStyle [columnMode]=\"'force'\" [footerHeight]=\"50\" [rows]=\"'assets/data/basicexample.json' | rufData | async\" [limit]=\"20\"\n     [attr.row-border]=\"hasBorder\" [attr.color]=\"inkbarColor\">\n      <ngx-datatable-column name=\"Id\"></ngx-datatable-column>\n      <ngx-datatable-column name=\"Name\"></ngx-datatable-column>\n      <ngx-datatable-column name=\"Gender\"></ngx-datatable-column>\n      <ngx-datatable-column name=\"Age\"></ngx-datatable-column>\n      <ngx-datatable-column name=\"City\" prop=\"address.city\"></ngx-datatable-column>\n      <ngx-datatable-column name=\"State\" prop=\"address.state\"></ngx-datatable-column>\n    </ngx-datatable>\n  </div>\n</div>\n",
     "table-with-inkbar.component.scss": ".example-h2 {\n  margin: 10px;\n}\n\n.example-section {\n display: flex;\n align-content: center;\n align-items: center;\n height: 60px;\n}\n\n.example-margin {\n margin: 0 10px;\n}\n",
     "table-with-inkbar.component.ts": "import { Component } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'demo-ngx-table-inkbar',\n  templateUrl: './table-with-inkbar.component.html',\n  styleUrls: ['./table-with-inkbar.component.scss']\n})\n\nexport class InkbarComponent {\n\n  inkbarColor: String;\n  hasBorder = 'true';\n\n}\n"
    }
   },
   "/src/examples/inline-editing": {
    "template": "ruf-demo-workspace",
    "title": "Inline editing",
    "description": "This example shows inline editing works with ngx datatble.",
    "tags": [
     "RUF",
     "table",
     "datatable",
     "data",
     "grid",
     "edit",
     "inline"
    ],
    "dependencies": {
     "@angular/animations": "~8.0.0",
     "@angular/cdk": "^8.0.1",
     "@angular/common": "~8.0.0",
     "@angular/compiler": "~8.0.0",
     "@angular/core": "~8.0.0",
     "@angular/flex-layout": "~8.0.0-beta.26",
     "@angular/forms": "~8.0.0",
     "@angular/material": "^8.0.1",
     "@angular/platform-browser": "~8.0.0",
     "@angular/platform-browser-dynamic": "~8.0.0",
     "@angular/router": "~8.0.0",
     "core-js": "^2.6.5",
     "hammerjs": "^2.0.8",
     "rxjs": "~6.5.2",
     "web-animations-js": "^2.3.1",
     "zone.js": "^0.9.1",
     "@ruf/ngx-datatable": "latest"
    },
    "files": {
     "index.html": "<demo-ngx-table-edit></demo-ngx-table-edit>",
     "_example.theme.scss": "@import 'node_modules/@ruf/theming/styles/theming/theming';\n@import 'node_modules/@ruf/ngx-datatable/styles/all-theme.scss';\n@import 'node_modules/@ruf/ngx-datatable/styles/_ngx-datatable.structure.scss';\n\n// a convenience mixin that aggregates all of your component theme mixins\n@mixin example-theme($theme) {\n  @include ruf-ngx-datatable-theme($theme);\n  demo-ngx-table-edit {\n    @include ruf-ngx-datatable();\n  }\n}\n\n@mixin example-typography($config) {\n  demo-ngx-table-edit {\n  }\n}\n",
     "example.module.ts": "import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { RufNgxDatatableModule } from '@ruf/ngx-datatable';\n\nimport {\n  RufUniqueIdModule\n} from '@ruf/shell';\nimport { RufPipesModule } from '@ruf/pipes';\nimport { InlineEditComponent } from './inlineediting.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    RufPipesModule,\n    RufNgxDatatableModule,\n    RufUniqueIdModule\n  ],\n  declarations: [\n    InlineEditComponent\n  ],\n  exports: [\n    InlineEditComponent\n  ]\n})\nexport class ExampleModule { }\n",
     "inlineediting.component.html": "<div class=\"grid-selection\">\n  <br>\n  <div class=\"table-content\">\n    <ngx-datatable\n    #mydatatable\n    fisStyle\n    [limit]=\"20\"\n    [columnMode]=\"'force'\"\n    [footerHeight]=\"50\"\n    [rows]=\"rows$\">\n    <ngx-datatable-column name=\"Name\">\n      <ng-template ngx-datatable-cell-template let-rowIndex=\"rowIndex\" let-value=\"value\" let-row=\"row\">\n        <span\n          title=\"Double click to edit\"\n          (dblclick)=\"editing[rowIndex + '-name'] = true\"\n          *ngIf=\"!editing[rowIndex + '-name']\">\n          {{value}}\n        </span>\n        <input\n          autofocus\n          (blur)=\"updateValue($event, 'name', rowIndex)\"\n          *ngIf=\"editing[rowIndex+ '-name']\"\n          type=\"text\"\n          [value]=\"value\"\n        />\n      </ng-template>\n    </ngx-datatable-column>\n    <ngx-datatable-column name=\"Gender\">\n      <ng-template ngx-datatable-cell-template let-rowIndex=\"rowIndex\" let-row=\"row\" let-value=\"value\">\n         <span\n          title=\"Double click to edit\"\n          (dblclick)=\"editing[rowIndex + '-gender'] = true\"\n          *ngIf=\"!editing[rowIndex + '-gender']\">\n          {{value}}\n        </span>\n        <select\n          *ngIf=\"editing[rowIndex + '-gender']\"\n          (change)=\"updateValue($event, 'gender', rowIndex)\"\n          [value]=\"value\">\n          <option value=\"male\">Male</option>\n          <option value=\"female\">Female</option>\n        </select>\n      </ng-template>\n    </ngx-datatable-column>\n    <ngx-datatable-column name=\"Age\">\n      <ng-template ngx-datatable-cell-template let-value=\"value\">\n        {{value}}\n      </ng-template>\n    </ngx-datatable-column>\n    </ngx-datatable>\n  </div>\n</div>\n",
     "inlineediting.component.ts": "import { Component } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { RufDataPipe } from '@ruf/pipes';\n\n@Component({\n  selector: 'demo-ngx-table-edit',\n  templateUrl: './inlineediting.component.html',\n})\nexport class InlineEditComponent {\n  private dataPipe: RufDataPipe\n  editing = {};\n  rows$ = [];\n\n  constructor(private _http: HttpClient) {\n    this.dataPipe = new RufDataPipe(_http);\n    this.fetch();\n  }\n\n  fetch() {\n    this.dataPipe.transform('assets/data/company.json').subscribe(\n      (data) => this.rows$ = data\n    );\n  }\n\n  updateValue(event, cell, rowIndex) {\n    console.log('inline editing rowIndex', rowIndex);\n    this.editing[rowIndex + '-' + cell] = false;\n    this.rows$[rowIndex][cell] = event.target.value;\n    console.log(this.rows$[rowIndex][cell]);\n    this.rows$ = [...this.rows$];\n    console.log('UPDATED!', this.rows$[rowIndex][cell]);\n  }\n\n}\n"
    }
   },
   "/src/examples/multiclickrow": {
    "template": "ruf-demo-workspace",
    "title": "Multiple row selection with click",
    "description": "This example shows multiple row selection with ngx datatble.",
    "tags": [
     "RUF",
     "table",
     "datatable",
     "data",
     "grid",
     "selection",
     "multiple"
    ],
    "dependencies": {
     "@angular/animations": "~8.0.0",
     "@angular/cdk": "^8.0.1",
     "@angular/common": "~8.0.0",
     "@angular/compiler": "~8.0.0",
     "@angular/core": "~8.0.0",
     "@angular/flex-layout": "~8.0.0-beta.26",
     "@angular/forms": "~8.0.0",
     "@angular/material": "^8.0.1",
     "@angular/platform-browser": "~8.0.0",
     "@angular/platform-browser-dynamic": "~8.0.0",
     "@angular/router": "~8.0.0",
     "core-js": "^2.6.5",
     "hammerjs": "^2.0.8",
     "rxjs": "~6.5.2",
     "web-animations-js": "^2.3.1",
     "zone.js": "^0.9.1",
     "@ruf/ngx-datatable": "latest"
    },
    "files": {
     "index.html": "<demo-ngx-table-multiclick></demo-ngx-table-multiclick>",
     "_example.theme.scss": "@import 'node_modules/@ruf/theming/styles/theming/theming';\n@import 'node_modules/@ruf/ngx-datatable/styles/all-theme.scss';\n@import 'node_modules/@ruf/ngx-datatable/styles/_ngx-datatable.structure.scss';\n\n// a convenience mixin that aggregates all of your component theme mixins\n@mixin example-theme($theme) {\n  @include ruf-ngx-datatable-theme($theme);\n  demo-ngx-table-multiclick {\n    @include ruf-ngx-datatable();\n  }\n}\n\n@mixin example-typography($config) {\n  demo-ngx-table-multiclick {\n  }\n}\n",
     "example.module.ts": "import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { RufNgxDatatableModule } from '@ruf/ngx-datatable';\n\nimport {\n  RufUniqueIdModule\n} from '@ruf/shell';\nimport { RufPipesModule } from '@ruf/pipes';\nimport { MultiClickSelectionComponent } from './multiclickrow.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RufPipesModule,\n    RufNgxDatatableModule,\n    RufUniqueIdModule\n  ],\n  declarations: [\n    MultiClickSelectionComponent\n  ],\n  exports: [\n    MultiClickSelectionComponent\n  ]\n})\nexport class ExampleModule { }\n",
     "multiclickrow.component.html": "<div class=\"grid-selection\">\n  <br>\n  <div class=\"table-content\">\n    <ngx-datatable\n    fisStyle\n    [rows]=\"'assets/data/company.json' | rufData | async\"\n    [columnMode]=\"'force'\"\n    [columns]=\"columns\"\n    [footerHeight]=\"50\"\n    [limit]=\"15\"\n    [selected]=\"selected\"\n    [selectionType]=\"'multiClick'\"\n    (select)=\"logger.log('No. of selected rows: ' + $event.selected.length); onSelect($event)\">\n  </ngx-datatable>\n</div>\n<div class='selected-column'>\n  <h4>Selections</h4>\n  <ul>\n    <li *ngFor='let sel of selected'>\n      {{sel.name}}\n    </li>\n    <li *ngIf=\"!selected.length\">No Selections</li>\n  </ul>\n  </div>\n</div>\n\n",
     "multiclickrow.component.ts": "import { Component, Inject, Optional } from '@angular/core';\n\n@Component({\n  selector: 'demo-ngx-table-multiclick',\n  templateUrl: './multiclickrow.component.html'\n})\nexport class MultiClickSelectionComponent {\n\n  selected = [];\n  columns: any[] = [\n    { prop: 'name'} ,\n    { name: 'Company' },\n    { name: 'Gender' }\n  ];\n\n  constructor(@Optional() @Inject('LOG_SERVICE') public logger) {\n  }\n\n  onSelect({ selected }) {\n    this.selected.splice(0, this.selected.length);\n    this.selected.push(...selected);\n  }\n\n}\n"
    }
   },
   "/src/examples/multirow": {
    "template": "ruf-demo-workspace",
    "title": "Multiple row selection",
    "description": "This example shows multiple row selection with ngx datatble.",
    "tags": [
     "RUF",
     "table",
     "datatable",
     "data",
     "grid",
     "selection",
     "multiple"
    ],
    "dependencies": {
     "@angular/animations": "~8.0.0",
     "@angular/cdk": "^8.0.1",
     "@angular/common": "~8.0.0",
     "@angular/compiler": "~8.0.0",
     "@angular/core": "~8.0.0",
     "@angular/flex-layout": "~8.0.0-beta.26",
     "@angular/forms": "~8.0.0",
     "@angular/material": "^8.0.1",
     "@angular/platform-browser": "~8.0.0",
     "@angular/platform-browser-dynamic": "~8.0.0",
     "@angular/router": "~8.0.0",
     "core-js": "^2.6.5",
     "hammerjs": "^2.0.8",
     "rxjs": "~6.5.2",
     "web-animations-js": "^2.3.1",
     "zone.js": "^0.9.1",
     "@ruf/ngx-datatable": "latest"
    },
    "files": {
     "index.html": "<demo-ngx-table-multirow></demo-ngx-table-multirow>",
     "_example.theme.scss": "@import 'node_modules/@ruf/theming/styles/theming/theming';\n@import 'node_modules/@ruf/ngx-datatable/styles/all-theme.scss';\n@import 'node_modules/@ruf/ngx-datatable/styles/_ngx-datatable.structure.scss';\n\n// a convenience mixin that aggregates all of your component theme mixins\n@mixin example-theme($theme) {\n  @include ruf-ngx-datatable-theme($theme);\n  demo-ngx-table-multirow {\n    @include ruf-ngx-datatable();\n  }\n}\n\n@mixin example-typography($config) {\n  demo-ngx-table-multirow {\n  }\n}\n",
     "example.module.ts": "import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { RufNgxDatatableModule } from '@ruf/ngx-datatable';\n\nimport {\n  RufUniqueIdModule\n} from '@ruf/shell';\nimport { RufPipesModule } from '@ruf/pipes';\nimport { MultiSelectionComponent } from './multirow.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RufPipesModule,\n    RufNgxDatatableModule,\n    RufUniqueIdModule\n  ],\n  declarations: [\n    MultiSelectionComponent\n  ],\n  exports: [\n    MultiSelectionComponent\n  ]\n})\nexport class ExampleModule { }\n",
     "multirow.component.html": "<div class=\"grid-selection\">\n  <br>\n  <div class=\"table-content\">\n    <ngx-datatable\n    fisStyle\n    [rows]=\"'assets/data/company.json' | rufData | async\"\n    [columnMode]=\"'force'\"\n    [columns]=\"columns\"\n    [footerHeight]=\"50\"\n    [limit]=\"15\"\n    [selected]=\"selected\"\n    [selectionType]=\"'multi'\"\n    (activate)=\"logger.log('[activate]: ' + $event.row.name);\"\n    (select)=\"logger.log('No. of selected rows: ' + $event.selected.length); onSelect($event)\">\n  </ngx-datatable>\n</div>\n<div class='selected-column'>\n  <h4>Selections</h4>\n  <ul>\n    <li *ngFor='let sel of selected'>\n      {{sel.name}}\n    </li>\n    <li *ngIf=\"!selected.length\">No Selections</li>\n  </ul>\n  </div>\n</div>\n",
     "multirow.component.ts": "import { Component, Inject, Optional } from '@angular/core';\n\n@Component({\n  selector: 'demo-ngx-table-multirow',\n  templateUrl: './multirow.component.html'\n})\nexport class MultiSelectionComponent {\n\n  selected = [];\n  columns: any[] = [\n    { prop: 'name'} ,\n    { name: 'Company' },\n    { name: 'Gender' }\n  ];\n\n  constructor(@Optional() @Inject('LOG_SERVICE') public logger) {\n  }\n\n  onSelect({ selected }) {\n    this.selected.splice(0, this.selected.length);\n    this.selected.push(...selected);\n  }\n\n}\n"
    }
   },
   "/src/examples/row-details": {
    "template": "ruf-demo-workspace",
    "title": "Row details",
    "description": "This example shows ngx datatble with row details.",
    "tags": [
     "RUF",
     "table",
     "datatable",
     "data",
     "grid",
     "details"
    ],
    "dependencies": {
     "@angular/animations": "~8.0.0",
     "@angular/cdk": "^8.0.1",
     "@angular/common": "~8.0.0",
     "@angular/compiler": "~8.0.0",
     "@angular/core": "~8.0.0",
     "@angular/flex-layout": "~8.0.0-beta.26",
     "@angular/forms": "~8.0.0",
     "@angular/material": "^8.0.1",
     "@angular/platform-browser": "~8.0.0",
     "@angular/platform-browser-dynamic": "~8.0.0",
     "@angular/router": "~8.0.0",
     "core-js": "^2.6.5",
     "hammerjs": "^2.0.8",
     "rxjs": "~6.5.2",
     "web-animations-js": "^2.3.1",
     "zone.js": "^0.9.1",
     "@ruf/ngx-datatable": "latest"
    },
    "files": {
     "index.html": "<demo-ngx-table-details></demo-ngx-table-details>",
     "_example.theme.scss": "@import 'node_modules/@ruf/theming/styles/theming/theming';\n@import 'node_modules/@ruf/ngx-datatable/styles/all-theme.scss';\n@import 'node_modules/@ruf/ngx-datatable/styles/_ngx-datatable.structure.scss';\n\n// a convenience mixin that aggregates all of your component theme mixins\n@mixin example-theme($theme) {\n  @include ruf-ngx-datatable-theme($theme);\n  demo-ngx-table-details {\n    @include ruf-ngx-datatable();\n  }\n}\n\n@mixin example-typography($config) {\n  demo-ngx-table-details {\n  }\n}\n",
     "example.module.ts": "import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { RufNgxDatatableModule } from '@ruf/ngx-datatable';\n\nimport {\n  RufUniqueIdModule\n} from '@ruf/shell';\nimport { RufPipesModule } from '@ruf/pipes';\nimport { RowDetailsComponent } from './rowdetails.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RufPipesModule,\n    RufNgxDatatableModule,\n    RufUniqueIdModule\n  ],\n  declarations: [\n    RowDetailsComponent\n  ],\n  exports: [\n    RowDetailsComponent\n  ]\n})\nexport class ExampleModule { }\n",
     "rowdetails.component.html": "<div class=\"grid-selection\">\n  <br>\n  <div class=\"table-content\">\n    <ngx-datatable\n    #myTable\n    fisStyle\n    [columnMode]=\"'force'\"\n    [footerHeight]=\"50\"\n    [rows]=\"'assets/data/basicexample.json' | rufData | async\"\n    (page)=\"onPage($event)\"\n    [limit]=\"25\">\n    <!-- Row Detail Template -->\n    <ngx-datatable-row-detail [rowHeight]=\"50\" #myDetailRow (toggle)=\"onDetailToggle($event)\">\n      <ng-template let-row=\"row\" let-expanded=\"expanded\" ngx-datatable-row-detail-template>\n        <div style=\"padding-left:35px;\">\n          <div><strong>Address</strong></div>\n          <div>{{row.address.city}}, {{row.address.state}}</div>\n        </div>\n      </ng-template>\n    </ngx-datatable-row-detail>\n    <!-- Column Templates -->\n     <ngx-datatable-column\n      [width]=\"50\"\n      [resizeable]=\"false\"\n      [sortable]=\"false\"\n      [draggable]=\"false\"\n      [canAutoResize]=\"false\">\n      <ng-template let-row=\"row\" let-expanded=\"expanded\" ngx-datatable-cell-template>\n        <a\n          href=\"javascript:void(0)\"\n          [class.datatable-icon-right]=\"!expanded\"\n          [class.datatable-icon-down]=\"expanded\"\n          title=\"Expand/Collapse Row\"\n          (click)=\"toggleExpandRow(row)\">\n        </a>\n      </ng-template>\n    </ngx-datatable-column>\n    <ngx-datatable-column name=\"Index\" width=\"80\">\n      <ng-template let-rowIndex=\"rowIndex\" let-row=\"row\" ngx-datatable-cell-template>\n        <strong>{{rowIndex}}</strong>\n      </ng-template>\n    </ngx-datatable-column>\n    <ngx-datatable-column name=\"Expanded\" width=\"80\">\n      <ng-template let-row=\"row\" let-expanded=\"expanded\" ngx-datatable-cell-template>\n        <strong>{{expanded === 1}}</strong>\n      </ng-template>\n    </ngx-datatable-column>\n    <ngx-datatable-column name=\"Name\" width=\"200\">\n      <ng-template let-value=\"value\" ngx-datatable-cell-template>\n        <strong>{{value}}</strong>\n      </ng-template>\n    </ngx-datatable-column>\n    <ngx-datatable-column name=\"Gender\" width=\"300\">\n      <ng-template let-row=\"row\" let-value=\"value\" ngx-datatable-cell-template>\n        <i [innerHTML]=\"row['name']\"></i> and <i>{{value}}</i>\n      </ng-template>\n    </ngx-datatable-column>\n    <ngx-datatable-column name=\"Age\" ></ngx-datatable-column>\n  </ngx-datatable>\n  </div>\n</div>\n",
     "rowdetails.component.ts": "import { Component, ViewEncapsulation, ViewChild } from '@angular/core';\n\n@Component({\n  selector: 'demo-ngx-table-details',\n  templateUrl: './rowdetails.component.html',\n  encapsulation: ViewEncapsulation.None\n\n})\nexport class RowDetailsComponent {\n\n  @ViewChild('myTable', {static: false}) table: any;\n\n  expanded: any = {};\n  timeout: any;\n\n  onPage(event) {\n    clearTimeout(this.timeout);\n    this.timeout = setTimeout(() => {\n      console.log('paged!', event);\n    }, 100);\n  }\n\n  toggleExpandRow(row) {\n    console.log('Toggled Expand Row!', row);\n    this.table.rowDetail.toggleExpandRow(row);\n  }\n\n  onDetailToggle(event) {\n    console.log('Detail Toggled', event);\n  }\n\n}\n"
    }
   },
   "/src/examples/singlerow": {
    "template": "ruf-demo-workspace",
    "title": "Single row selection",
    "description": "This example shows single row selection with ngx datatble.",
    "tags": [
     "RUF",
     "table",
     "datatable",
     "data",
     "grid",
     "selection"
    ],
    "dependencies": {
     "@angular/animations": "~8.0.0",
     "@angular/cdk": "^8.0.1",
     "@angular/common": "~8.0.0",
     "@angular/compiler": "~8.0.0",
     "@angular/core": "~8.0.0",
     "@angular/flex-layout": "~8.0.0-beta.26",
     "@angular/forms": "~8.0.0",
     "@angular/material": "^8.0.1",
     "@angular/platform-browser": "~8.0.0",
     "@angular/platform-browser-dynamic": "~8.0.0",
     "@angular/router": "~8.0.0",
     "core-js": "^2.6.5",
     "hammerjs": "^2.0.8",
     "rxjs": "~6.5.2",
     "web-animations-js": "^2.3.1",
     "zone.js": "^0.9.1",
     "@ruf/ngx-datatable": "latest"
    },
    "files": {
     "index.html": "<demo-ngx-table-singlerow></demo-ngx-table-singlerow>",
     "_example.theme.scss": "@import 'node_modules/@ruf/theming/styles/theming/theming';\n@import 'node_modules/@ruf/ngx-datatable/styles/all-theme.scss';\n@import 'node_modules/@ruf/ngx-datatable/styles/_ngx-datatable.structure.scss';\n\n// a convenience mixin that aggregates all of your component theme mixins\n@mixin example-theme($theme) {\n  @include ruf-ngx-datatable-theme($theme);\n  demo-ngx-table-singlerow {\n    @include ruf-ngx-datatable();\n  }\n}\n\n@mixin example-typography($config) {\n  demo-ngx-table-singlerow {\n  }\n}\n",
     "example.module.ts": "import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { RufNgxDatatableModule } from '@ruf/ngx-datatable';\n\nimport {\n  RufUniqueIdModule\n} from '@ruf/shell';\nimport { RufPipesModule } from '@ruf/pipes';\nimport { SingleSelectionComponent } from './singlerow.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RufPipesModule,\n    RufNgxDatatableModule,\n    RufUniqueIdModule\n  ],\n  declarations: [\n    SingleSelectionComponent\n  ],\n  exports: [\n    SingleSelectionComponent\n  ]\n})\nexport class ExampleModule { }\n",
     "singlerow.component.html": "<div class=\"grid-selection\">\n  <br>\n  <div class=\"table-content\">\n    <ngx-datatable\n    fisStyle\n    [rows]=\"'assets/data/company.json' | rufData | async\"\n    [columnMode]=\"'force'\"\n    [columns]=\"columns\"\n    [footerHeight]=\"50\"\n    [limit]=\"5\"\n    [selected]=\"selected\"\n    [selectionType]=\"'single'\"\n    (select)=\"logger.log('[select]: ' + $event.selected[0].name);\"\n    [limit]=\"20\">\n  </ngx-datatable>\n  </div>\n</div>\n",
     "singlerow.component.ts": "import { Component, Inject, Optional } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'demo-ngx-table-singlerow',\n  templateUrl: './singlerow.component.html'\n})\nexport class SingleSelectionComponent {\n\n  selected = [];\n  columns: any[] = [\n    { prop: 'name'} ,\n    { name: 'Company' },\n    { name: 'Gender' }\n  ];\n\n  constructor(@Optional() @Inject('LOG_SERVICE') public logger) {\n  }\n\n  onSelect({ selected }) {\n    this.selected.splice(0, this.selected.length);\n    this.selected.push(...selected);\n  }\n}\n"
    }
   },
   "/src/examples/sorting": {
    "template": "ruf-demo-workspace",
    "title": "Data Sorting",
    "description": "This example shows sorting with ngx datatble.",
    "tags": [
     "RUF",
     "table",
     "datatable",
     "data",
     "grid",
     "sorting"
    ],
    "dependencies": {
     "@angular/animations": "~8.0.0",
     "@angular/cdk": "^8.0.1",
     "@angular/common": "~8.0.0",
     "@angular/compiler": "~8.0.0",
     "@angular/core": "~8.0.0",
     "@angular/flex-layout": "~8.0.0-beta.26",
     "@angular/forms": "~8.0.0",
     "@angular/material": "^8.0.1",
     "@angular/platform-browser": "~8.0.0",
     "@angular/platform-browser-dynamic": "~8.0.0",
     "@angular/router": "~8.0.0",
     "core-js": "^2.6.5",
     "hammerjs": "^2.0.8",
     "rxjs": "~6.5.2",
     "web-animations-js": "^2.3.1",
     "zone.js": "^0.9.1",
     "@ruf/ngx-datatable": "latest"
    },
    "files": {
     "index.html": "<demo-ngx-table-sorting></demo-ngx-table-sorting>",
     "_example.theme.scss": "@import 'node_modules/@ruf/theming/styles/theming/theming';\n@import 'node_modules/@ruf/ngx-datatable/styles/all-theme.scss';\n@import 'node_modules/@ruf/ngx-datatable/styles/_ngx-datatable.structure.scss';\n\n// a convenience mixin that aggregates all of your component theme mixins\n@mixin example-theme($theme) {\n  @include ruf-ngx-datatable-theme($theme);\n  demo-ngx-table-sorting {\n    @include ruf-ngx-datatable();\n  }\n}\n\n@mixin example-typography($config) {\n  demo-ngx-table-sorting {\n  }\n}\n",
     "example.module.ts": "import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { RufNgxDatatableModule } from '@ruf/ngx-datatable';\n\nimport {\n  RufUniqueIdModule\n} from '@ruf/shell';\nimport { RufPipesModule } from '@ruf/pipes';\nimport { SortingComponent } from './sorting.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RufPipesModule,\n    RufNgxDatatableModule,\n    RufUniqueIdModule\n  ],\n  declarations: [\n    SortingComponent\n  ],\n  exports: [\n    SortingComponent\n  ]\n})\nexport class ExampleModule { }\n",
     "sorting.component.html": "<div class=\"grid-selection\">\n  <br>\n  <div class=\"table-content\">\n    <ngx-datatable fisStyle [columnMode]=\"'force'\" [footerHeight]=\"50\" [rows]=\"'assets/data/basicexample.json' | rufData | async\"\n      [limit]=\"20\"\n      [sorts]=\"[{prop: 'name', dir: 'desc'}]\">\n      <ngx-datatable-column name=\"Id\"></ngx-datatable-column>\n      <ngx-datatable-column name=\"Name\"></ngx-datatable-column>\n      <ngx-datatable-column name=\"Gender\"></ngx-datatable-column>\n      <ngx-datatable-column name=\"Age\"></ngx-datatable-column>\n      <ngx-datatable-column name=\"City\" prop=\"address.city\"></ngx-datatable-column>\n      <ngx-datatable-column name=\"State\" prop=\"address.state\"></ngx-datatable-column>\n    </ngx-datatable>\n  </div>\n</div>\n",
     "sorting.component.ts": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'demo-ngx-table-sorting',\n  templateUrl: './sorting.component.html'\n})\n\nexport class SortingComponent {\n\n}\n"
    }
   },
   "/src/examples/sub-text": {
    "template": "ruf-demo-workspace",
    "title": "Data text in rows",
    "description": "This example ngx datatble with additional data in row.",
    "tags": [
     "RUF",
     "table",
     "datatable",
     "data",
     "grid",
     "subheader"
    ],
    "dependencies": {
     "@angular/animations": "~8.0.0",
     "@angular/cdk": "^8.0.1",
     "@angular/common": "~8.0.0",
     "@angular/compiler": "~8.0.0",
     "@angular/core": "~8.0.0",
     "@angular/flex-layout": "~8.0.0-beta.26",
     "@angular/forms": "~8.0.0",
     "@angular/material": "^8.0.1",
     "@angular/platform-browser": "~8.0.0",
     "@angular/platform-browser-dynamic": "~8.0.0",
     "@angular/router": "~8.0.0",
     "core-js": "^2.6.5",
     "hammerjs": "^2.0.8",
     "rxjs": "~6.5.2",
     "web-animations-js": "^2.3.1",
     "zone.js": "^0.9.1",
     "@ruf/ngx-datatable": "latest"
    },
    "files": {
     "index.html": "<demo-ngx-table-subtext></demo-ngx-table-subtext>",
     "_example.theme.scss": "@import 'node_modules/@ruf/theming/styles/theming/theming';\n@import 'node_modules/@ruf/ngx-datatable/styles/all-theme.scss';\n@import 'node_modules/@ruf/ngx-datatable/styles/_ngx-datatable.structure.scss';\n\n// a convenience mixin that aggregates all of your component theme mixins\n@mixin example-theme($theme) {\n  @include ruf-ngx-datatable-theme($theme);\n  demo-ngx-table-subtext {\n    @include ruf-ngx-datatable();\n  }\n}\n\n@mixin example-typography($config) {\n  demo-ngx-table-subtext {\n  }\n}\n",
     "example.module.ts": "import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { RufNgxDatatableModule } from '@ruf/ngx-datatable';\n\nimport {\n  RufUniqueIdModule\n} from '@ruf/shell';\nimport { RufPipesModule } from '@ruf/pipes';\nimport { TableWithSubtextComponent } from './table-with-subtext.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RufPipesModule,\n    RufNgxDatatableModule,\n    RufUniqueIdModule\n  ],\n  declarations: [\n    TableWithSubtextComponent\n  ],\n  exports: [\n    TableWithSubtextComponent\n  ]\n})\nexport class ExampleModule { }\n",
     "table-with-subtext.component.html": "<div class=\"grid-selection\">\n  <br>\n  <div class=\"table-content\">\n    <ngx-datatable\n      #myTable\n      fisStyle\n      [columnMode]=\"'force'\"\n      [footerHeight]=\"50\"\n      [rows]=\"'assets/data/basicexample.json' | rufData | async\"\n      (page)=\"onPage($event)\"\n      rowHeight=\"75\"\n      [limit]=\"25\">\n      <ngx-datatable-column name=\"Index\" width=\"80\">\n        <ng-template let-rowIndex=\"rowIndex\" let-row=\"row\" ngx-datatable-cell-template>\n          <strong>{{rowIndex}}</strong>\n        </ng-template>\n      </ngx-datatable-column>\n      <ngx-datatable-column name=\"Name\" width=\"200\">\n        <ng-template let-row=\"row\" ngx-datatable-cell-template>\n          <strong>{{row.name}}</strong>\n          <div class=\"ruf-ngx-table-subtext\">{{row.address.city}}, {{row.address.state}}</div>\n        </ng-template>\n      </ngx-datatable-column>\n      <ngx-datatable-column name=\"Gender\" width=\"300\">\n        <ng-template let-row=\"row\" let-value=\"value\" ngx-datatable-cell-template>\n          <i [innerHTML]=\"row['name']\"></i> and <i>{{value}}</i>\n        </ng-template>\n      </ngx-datatable-column>\n      <ngx-datatable-column name=\"Age\" ></ngx-datatable-column>\n    </ngx-datatable>\n  </div>\n</div>\n",
     "table-with-subtext.component.ts": "import {Component, OnInit, ViewChild} from '@angular/core';\n\n@Component({\n  selector: 'demo-ngx-table-subtext',\n  templateUrl: './table-with-subtext.component.html'\n})\nexport class TableWithSubtextComponent  {\n\n  expanded: any = {};\n  timeout: any;\n  onPage(event) {\n    clearTimeout(this.timeout);\n    this.timeout = setTimeout(() => {\n      console.log('paged!', event);\n    }, 100);\n  }\n\n}\n"
    }
   }
  }
 ],
 "logo": "",
 "screenshots": "",
 "sections": "",
 "readmes": {
  "/README.md": "# RUF ngx-datatable\n\nThis library provides `theme.scss` and `_ngx-datatable.structure.scss` files to style the `ngx-datatable` component of [`@swimlane/ngx-datatable`](https://github.com/swimlane/ngx-datatable#readme) so that it looks like tables defined in the [`FIS UX guidelines`](ux.fisglobal.com/ux/menutouch.html#/tables).\n\nThe `@swimlane/ngx-datatable` provides a feature-rich open source datatable component but is not necessarily the datatable that's best for your app. \nThe `@ruf/material` library also provides styles for `mat-table` and other teams have used and styled the commercial [`ag-grid`](https://www.ag-grid.com/). Make sure you evaluate the options based on your requirements.\n\n# Installation\n* Install dependencies.\n```bash\nnpm install --save @ruf/ngx-datatable\nnpm install --save @swimlane/ngx-datatable\n```\n\n* Import `RufNgxDatatableModule`\n\n```ts\nimport { RufNgxDatatableModule } from '@ruf/ngx-datatable';\n\n@NgModule({\n  ...\n  imports: [\n    RufNgxDatatableModule,\n    ...\n  ]\n  ...\n})\n```\n\n* Include theme in your application's theme: \n\n```scss\n@import '~@ruf/ngx-datatable/styles/all-theme';\n\n...\n\n@include ruf-ngx-datatable-theme($theme);\n```\n\n* Include structural styles for component in you application's styles e.g. `styles.scss`\n\n```scss\n@import 'node_modules/@ruf/ngx-datatable/styles/_ngx-datatable.structure.scss';\n\n...\n\n@include ruf-ngx-datatable();\n```\n\n# How to use\n\nSimply add the `fisStyle` attribute to the `ngx-datatable` element.\n\n```html\n<ngx-datatable fisStyle ...>\n</ngx-datatable>\n```\n\nVisit the library's [`documentation page`](https://swimlane.gitbooks.io/ngx-datatable/) for details.\n"
 }
}