import * as fs from 'fs-extra';
import * as nodefs from 'fs';
import * as rimraf from 'rimraf';
import * as dm from 'deepmerge';
import { FindOptions } from './finder';
export { tmpdir } from 'os';
export declare const lstat: (arg1: string) => Promise<fs.Stats>;
export declare const readdir: (arg1: string) => Promise<string[]>;
export declare const copy: typeof fs.copy;
export declare const move: typeof fs.move;
export declare const readFile: (arg1: string) => Promise<Buffer>;
export declare const writeFile: (arg1: string, arg2: any) => Promise<void>;
export declare const rename: (arg1: string, arg2: string) => Promise<{}>;
export declare const rm: typeof rimraf.__promisify__;
export declare const mkdir: (arg1: string) => Promise<string | null>;
export declare const symlink: typeof nodefs.symlink.__promisify__;
export declare const access: (arg1: string) => Promise<void>;
export declare const glob: (arg1: string, arg2: any) => Promise<string[]>;
export declare const findup: (arg1: string, arg2: string) => Promise<string>;
export declare class DetailedError extends Error {
    details: string;
    hash?: string | undefined;
    constructor(msg: string, details: string, hash?: string | undefined);
}
export declare function readJSONFile(file: string): Promise<any>;
export declare function writeJSONFile(file: string, contents: any): Promise<void>;
export declare function getSHA1(data: string): string;
export declare function getHash(obj: any): string;
export declare function noop(): void;
export declare function isDirectory(path: string, source: string): Promise<boolean>;
export declare function getDirs(path: string): Promise<string[]>;
export declare function exists(path: string): Promise<boolean>;
export declare function writeFileForce(path: string, contents: string): Promise<void>;
export declare function isObject(a: any): boolean;
export declare function isArray(a: any): boolean;
export declare function isString(a: any): boolean;
export declare const deepmerge: typeof dm;
export declare function changeJSONFiles(dir: string, mergers: {
    [file: string]: string;
}): Promise<void>;
export declare function linkDependencies(path: string, linkDeps: string[], hash?: string): Promise<void>;
export declare function getLoadedFiles(opts: FindOptions, ignoreFiles?: string[]): Promise<{
    [name: string]: string;
}>;
