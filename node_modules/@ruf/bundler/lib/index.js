"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
const os_1 = require("os");
const path_1 = require("path");
const template_1 = require("./template");
const dependency_manager_1 = require("./dependency-manager");
__export(require("./finder"));
__export(require("./template"));
__export(require("./dependency-manager"));
var util_1 = require("./util");
exports.DetailedError = util_1.DetailedError;
class Bundler {
    constructor(opts = {}) {
        const cachePath = opts.cachePath || path_1.join(os_1.homedir(), '.ruf-bundler-cache');
        this.dependencyManager = new dependency_manager_1.DependencyManager({
            cachePath: cachePath
        });
    }
    get cachePath() {
        return this.dependencyManager.cachePath;
    }
    getTemplateNames() {
        return __awaiter(this, void 0, void 0, function* () {
            return template_1.Template.getTemplateNames();
        });
    }
    getTemplate(name) {
        return new template_1.Template(name, this.dependencyManager);
    }
}
exports.Bundler = Bundler;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7OztBQUFBLDJCQUE2QjtBQUM3QiwrQkFBcUM7QUFDckMseUNBQXNDO0FBQ3RDLDZEQUc4QjtBQUU5Qiw4QkFBeUI7QUFDekIsZ0NBQTJCO0FBQzNCLDBDQUFxQztBQUNyQywrQkFBdUM7QUFBOUIsK0JBQUEsYUFBYSxDQUFBO0FBT3RCO0lBR0UsWUFBWSxPQUF1QixFQUFFO1FBQ25DLE1BQU0sU0FBUyxHQUFHLElBQUksQ0FBQyxTQUFTLElBQUksV0FBSSxDQUFDLFlBQU8sRUFBRSxFQUFFLG9CQUFvQixDQUFDLENBQUM7UUFDMUUsSUFBSSxDQUFDLGlCQUFpQixHQUFHLElBQUksc0NBQWlCLENBQUM7WUFDN0MsU0FBUyxFQUFFLFNBQVM7U0FDckIsQ0FBQyxDQUFDO0lBQ0wsQ0FBQztJQUVELElBQUksU0FBUztRQUNYLE9BQU8sSUFBSSxDQUFDLGlCQUFpQixDQUFDLFNBQVMsQ0FBQztJQUMxQyxDQUFDO0lBRUssZ0JBQWdCOztZQUNwQixPQUFPLG1CQUFRLENBQUMsZ0JBQWdCLEVBQUUsQ0FBQztRQUNyQyxDQUFDO0tBQUE7SUFFRCxXQUFXLENBQUMsSUFBWTtRQUN0QixPQUFPLElBQUksbUJBQVEsQ0FBQyxJQUFJLEVBQUUsSUFBSSxDQUFDLGlCQUFpQixDQUFDLENBQUM7SUFDcEQsQ0FBQztDQUNGO0FBckJELDBCQXFCQyJ9